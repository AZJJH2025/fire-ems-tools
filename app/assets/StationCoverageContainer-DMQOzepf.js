var _e=Object.defineProperty;var Ee=(g,t,s)=>t in g?_e(g,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):g[t]=s;var oe=(g,t,s)=>Ee(g,typeof t!="symbol"?t+"":t,s);import{j as e,r as l,B as b}from"./index-Cv5g0ua1.js";import{L as F}from"./leaflet-Da19aYEG.js";import{c as Me,P as de,T as d}from"./Typography-BDT9d4yF.js";import{T as Y,A as Ce,U as xe,E as Be}from"./Edit-C84RqsDV.js";import{f as K,C as Q,A as se,D as We,T as V,L as Ue,h as Oe,i as Ve,j as He,F as qe,P as Je,d as ye,E as Ye,a as je,b as Te,c as Pe,e as Ae,G as Z,y as Xe}from"./jspdf.es.min-Dng_7cD4.js";import{L as Ze,S as ge}from"./Place-b6BOUKQ8.js";import{A as pe,a as ue,E as he,b as me,G as Ke}from"./Warning-Bnxacc8H.js";import{B as H}from"./Button-D4VwlpUq.js";import{D as Qe}from"./Delete-DSliO6Sf.js";import{T as et}from"./Timeline-DHKfENok.js";import{R as tt,a as ve}from"./RadioGroup-ChU5daZ8.js";import{M as fe}from"./Map-BxWfE-0v.js";import{a as ce,L as at}from"./jspdf.plugin.autotable-DdrbtWlY.js";import{L as ot}from"./LocalFireDepartment-ETFH3BDb.js";import{S as nt,a as st,b as it,D as rt}from"./Download-IMswBtOu.js";import{A as Fe}from"./Assessment-B3n3ECUo.js";import{C as Se,a as be}from"./CardContent-Dog-2gpX.js";import{C as lt,B as ct}from"./Gavel-Cw8Lv7-U.js";import{D as dt,M as pt,E as ut}from"./Menu-DTuYz_tt.js";import{S as ht}from"./Settings-C6lZJrgB.js";import{I as mt}from"./Info-2MXtFldH.js";import"./Popper-0UscLgiQ.js";import"./FormGroup-Dw6xasXy.js";const gt=Me(e.jsx("path",{d:"M12 8c-2.21 0-4 1.79-4 4s1.79 4 4 4 4-1.79 4-4-1.79-4-4-4m8.94 3c-.46-4.17-3.77-7.48-7.94-7.94V1h-2v2.06C6.83 3.52 3.52 6.83 3.06 11H1v2h2.06c.46 4.17 3.77 7.48 7.94 7.94V23h2v-2.06c4.17-.46 7.48-3.77 7.94-7.94H23v-2zM12 19c-3.87 0-7-3.13-7-7s3.13-7 7-7 7 3.13 7 7-3.13 7-7 7"})),ft=({stations:g,jurisdictionBoundary:t,coverageStandard:s,onStationAdd:r,onStationSelect:v,onAnalysisUpdate:c,analysisTriggered:C})=>{const w=l.useRef(null),f=l.useRef(null),x=l.useRef(!1),[h,U]=l.useState(!1),[S,P]=l.useState(!1),[p,y]=l.useState({stations:!0,isochrones:!0,gaps:!0,boundaries:!0}),[R,N]=l.useState("idle"),[ee,B]=l.useState([]),[O,W]=l.useState([]),L={nfpa1710:{name:"NFPA 1710 (Career Departments)",travelTime:240,responseTimeGoal:480,coverageGoal:90,travelSpeed:35},nfpa1720:{name:"NFPA 1720 (Volunteer Departments)",travelTime:480,responseTimeGoal:600,coverageGoal:80,travelSpeed:35}}[s],q=(o,a)=>a.type==="Polygon"?i(o,a.coordinates[0]):a.type==="MultiPolygon"?a.coordinates.some(n=>i(o,n[0])):!1,i=(o,a)=>{const n=o.lng,u=o.lat;let m=!1;for(let z=0,k=a.length-1;z<a.length;k=z++){const E=a[z][0],M=a[z][1],$=a[k][0],_=a[k][1];M>u!=_>u&&n<($-E)*(u-M)/(_-M)+E&&(m=!m)}return m},j=l.useCallback(()=>{if(!(!w.current||f.current))try{F.Icon.Default.mergeOptions({iconRetinaUrl:"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.9.4/images/marker-icon-2x.png",iconUrl:"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.9.4/images/marker-icon.png",shadowUrl:"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.9.4/images/marker-shadow.png"});const o=F.map(w.current).setView([39.8283,-98.5795],4);F.tileLayer("https://tile.openstreetmap.org/{z}/{x}/{y}.png",{attribution:"¬© OpenStreetMap contributors",maxZoom:19}).addTo(o),console.log("üó∫Ô∏è Using OpenStreetMap tiles like other working components"),console.log("üó∫Ô∏è Leaflet marker icons configured with CDN URLs"),f.current=o,U(!0),console.log("üó∫Ô∏è Coverage map initialized successfully"),o.on("click",A)}catch(o){console.error("‚ùå Failed to initialize coverage map:",o),N("error")}},[]),A=l.useCallback(o=>{if(!S||!r)return;const{lat:a,lng:n}=o.latlng,u={station_id:`STATION_${Date.now()}`,station_name:"New Station",latitude:a,longitude:n,station_type:"engine",operational_status:"active"};r(u),P(!1),console.log("üöí New station placed at:",a,n)},[S,r]),D=l.useCallback(()=>{if(!(!f.current||!h))try{const o=f.current;if(o.eachLayer(a=>{a.options&&a.options.stationType==="station"&&o.removeLayer(a)}),g.forEach(a=>{const n=F.marker([a.latitude,a.longitude],{stationType:"station"}).addTo(o),u=`
          <div>
            <h4>${a.station_name}</h4>
            <p><strong>ID:</strong> ${a.station_id}</p>
            <p><strong>Type:</strong> ${a.station_type||"Unknown"}</p>
            <p><strong>Apparatus:</strong> ${a.apparatus_count||"N/A"}</p>
            <p><strong>Status:</strong> ${a.operational_status||"Unknown"}</p>
          </div>
        `;n.bindPopup(u),n.on("click",()=>{v&&v(a)})}),g.length>0){const a=F.latLngBounds(g.map(n=>[n.latitude,n.longitude]));o.fitBounds(a,{padding:[50,50]})}console.log("üìç Updated",g.length,"station markers")}catch(o){console.error("‚ùå Failed to update station markers:",o)}},[g,h]),G=l.useCallback(()=>{var o;if(!(!f.current||!h))try{const a=f.current;if(a.eachLayer(n=>{n.options&&n.options.layerType==="boundary"&&a.removeLayer(n)}),t&&p.boundaries){console.log("üó∫Ô∏è Adding jurisdiction boundary to map");const n=F.geoJSON(t,{layerType:"boundary",style:{color:"#ff6b35",weight:3,opacity:.8,fillColor:"#ff6b35",fillOpacity:.1,dashArray:"5, 5"}}).addTo(a);if(t.features&&((o=t.features[0])!=null&&o.properties)){const u=t.features[0].properties,m=`
            <div>
              <h4>${u.name||"Jurisdiction Boundary"}</h4>
              ${u.population?`<p><strong>Population:</strong> ${u.population.toLocaleString()}</p>`:""}
              ${u.area_sq_miles?`<p><strong>Area:</strong> ${u.area_sq_miles} sq miles</p>`:""}
              ${u.county?`<p><strong>County:</strong> ${u.county}</p>`:""}
              ${u.state?`<p><strong>State:</strong> ${u.state}</p>`:""}
            </div>
          `;n.bindPopup(m)}g.length===0&&a.fitBounds(n.getBounds(),{padding:[20,20]}),console.log("‚úÖ Jurisdiction boundary added to map")}}catch(a){console.error("‚ùå Failed to update jurisdiction boundary:",a)}},[t,h,p.boundaries,g.length]),I=l.useCallback(async()=>{if(!(!f.current||!h||g.length===0)){if(x.current){console.log("üîÑ Isochrone generation already in progress, skipping...");return}x.current=!0,N("analyzing");try{const o=f.current;o.eachLayer(m=>{m.options&&m.options.layerType==="isochrone"&&o.removeLayer(m)});const a=g.map(async m=>T(m));(await Promise.all(a)).forEach((m,z)=>{m&&ie(m,g[z])}),N("complete");const u=Ge();c&&c(u),console.log("‚úÖ Generated isochrones for",g.length,"stations")}catch(o){console.error("‚ùå Failed to generate isochrones:",o),N("error")}finally{x.current=!1}}},[g,h,L]),T=async o=>{const a=L.travelTime/60,n=L.travelSpeed*1609.34*a/60;return{center:[o.latitude,o.longitude],radius:n,travelTime:L.travelTime,stationId:o.station_id}},ie=(o,a)=>{if(f.current)try{const n=f.current;F.circle(o.center,{radius:o.radius,layerType:"isochrone",color:"#2196f3",fillColor:"#2196f3",fillOpacity:.1,weight:2}).addTo(n).bindPopup(`
        <div>
          <h4>${a.station_name} Coverage</h4>
          <p><strong>Travel Time:</strong> ${o.travelTime/60} minutes</p>
          <p><strong>Standard:</strong> ${L.name}</p>
        </div>
      `)}catch(n){console.error("‚ùå Failed to add isochrone to map:",n)}},re=l.useCallback(async()=>{if(!f.current||g.length===0){console.warn("Cannot perform analysis: missing map or stations");return}N("analyzing"),console.log("üîç Starting comprehensive coverage gap analysis...");try{const o=g.map(m=>{const z=L.travelTime/60,k=L.travelSpeed*1609.34*z/60;return{station:m,center:[m.latitude,m.longitude],radius:k,coverageCircle:F.circle([m.latitude,m.longitude],{radius:k})}}),a=await we(o);B(a);const n=Ne(a);W(n);const u=Re(o,a);ze(a),Le(n),N("complete"),c&&c({...u,gaps:a,recommendations:n,totalStations:g.length,coverageStandard:s,analysisDate:new Date().toISOString()}),console.log("‚úÖ Coverage analysis complete:",{gaps:a.length,recommendations:n.length,metrics:u})}catch(o){console.error("‚ùå Coverage analysis failed:",o),N("error")}},[g,t,L,c]),we=async o=>{const a=[];let n,u=!1;if(t&&(t.features||t.type))console.log("üèõÔ∏è Jurisdiction boundary detected:",t),n=F.geoJSON(t).getBounds(),u=!0,console.log("üó∫Ô∏è Using jurisdiction boundary for analysis area");else{if(g.length===0)return a;const $=F.latLngBounds(g.map(J=>[J.latitude,J.longitude])),_=.05;n=F.latLngBounds([[$.getSouth()-_,$.getWest()-_],[$.getNorth()+_,$.getEast()+_]]),console.log("üó∫Ô∏è Using station bounds with padding for analysis area (no jurisdiction boundary)")}const m=.01,z=n.getSouth(),k=n.getNorth(),E=n.getWest(),M=n.getEast();console.log("üìã Analyzing coverage with grid:",{bounds:{minLat:z,maxLat:k,minLng:E,maxLng:M},gridSize:m,totalCells:Math.ceil((k-z)/m)*Math.ceil((M-E)/m)});for(let $=z;$<k;$+=m)for(let _=E;_<M;_+=m){const J=F.latLng($+m/2,_+m/2);let X=!0;if(u){X=!1;try{const te=F.latLng(J.lat,J.lng);F.geoJSON(t).eachLayer(le=>{le.getBounds&&le.getBounds().contains(te)&&le.feature&&le.feature.geometry&&(X=q(te,le.feature.geometry))})}catch(te){console.warn("Point-in-polygon check failed, defaulting to bounds check:",te),X=!0}}if(!X)continue;let ne=!1;for(const te of o)if(J.distanceTo(F.latLng(te.center[0],te.center[1]))<=te.radius){ne=!0;break}ne||a.push({id:`gap_${a.length+1}`,center:[J.lat,J.lng],bounds:{north:$+m,south:$,east:_+m,west:_},type:"uncovered_area",severity:"high",estimatedPopulation:Math.floor(Math.random()*1e3)+100})}return console.log(`üî¥ Identified ${a.length} coverage gaps`),a},Ne=o=>{const a=[];return o.length===0?(console.log("‚úÖ No coverage gaps found - no station recommendations needed"),a):(De(o).forEach((u,m)=>{const z=Ie(u);a.push({id:`recommendation_${m+1}`,position:z,type:"new_station",priority:u.length>3?"high":"medium",gapsCovered:u.length,estimatedPopulationServed:u.reduce((k,E)=>k+E.estimatedPopulation,0),reasoning:`Recommended to cover ${u.length} identified gaps in this area`})}),console.log(`üìç Generated ${a.length} station recommendations`),a)},De=o=>{const a=[],n=new Set,u=5e3;return o.forEach((m,z)=>{if(n.has(z))return;const k=[m];n.add(z),o.forEach((E,M)=>{if(n.has(M))return;F.latLng(m.center[0],m.center[1]).distanceTo(F.latLng(E.center[0],E.center[1]))<=u&&(k.push(E),n.add(M))}),k.length>0&&a.push(k)}),a},Ie=o=>{const a=o.reduce((u,m)=>u+m.center[0],0)/o.length,n=o.reduce((u,m)=>u+m.center[1],0)/o.length;return[a,n]},Re=(o,a)=>{if(!t)return{coverageMetrics:{populationCovered:0,areaCovered:0,nfpaCompliance:0},identifiedGaps:a.length,recommendedStations:0};const u=F.geoJSON(t).getBounds(),m=(u.getNorth()-u.getSouth())*(u.getEast()-u.getWest()),z=a.length*.01*.01,E=Math.max(0,m-z)/m*100,M=a.reduce((X,ne)=>X+ne.estimatedPopulation,0)+g.length*5e3,$=Math.max(0,M-a.reduce((X,ne)=>X+ne.estimatedPopulation,0)),_=M>0?$/M*100:100,J=Math.min(E,_);return{coverageMetrics:{populationCovered:Math.round(_*10)/10,areaCovered:Math.round(E*10)/10,nfpaCompliance:Math.round(J*10)/10},identifiedGaps:a.length,recommendedStations:O.length}},ze=o=>{if(!f.current||!p.gaps)return;const a=f.current;a.eachLayer(n=>{n.options&&n.options.layerType==="gap"&&a.removeLayer(n)}),o.forEach(n=>{F.rectangle([[n.bounds.south,n.bounds.west],[n.bounds.north,n.bounds.east]],{layerType:"gap",color:"#ff4444",fillColor:"#ff4444",fillOpacity:.3,weight:1}).addTo(a).bindPopup(`
        <div>
          <h4>üî¥ Coverage Gap</h4>
          <p><strong>Severity:</strong> ${n.severity}</p>
          <p><strong>Est. Population:</strong> ${n.estimatedPopulation}</p>
          <p><strong>Area:</strong> ~1 km¬≤</p>
        </div>
      `)}),console.log(`üìç Visualized ${o.length} coverage gaps on map`)},Le=o=>{if(!f.current)return;const a=f.current;a.eachLayer(n=>{n.options&&n.options.layerType==="recommendation"&&a.removeLayer(n)}),o.forEach(n=>{F.marker(n.position,{layerType:"recommendation",icon:F.divIcon({className:"recommended-station-marker",html:'<div style="background-color: #4CAF50; color: white; border-radius: 50%; width: 30px; height: 30px; display: flex; align-items: center; justify-content: center; font-weight: bold; border: 2px solid white; box-shadow: 0 2px 4px rgba(0,0,0,0.3);">+</div>',iconSize:[30,30],iconAnchor:[15,15]})}).addTo(a).bindPopup(`
        <div>
          <h4>üü¢ Recommended Station</h4>
          <p><strong>Priority:</strong> ${n.priority}</p>
          <p><strong>Gaps Covered:</strong> ${n.gapsCovered}</p>
          <p><strong>Population Served:</strong> ~${n.estimatedPopulationServed}</p>
          <p><strong>Reasoning:</strong> ${n.reasoning}</p>
        </div>
      `)}),console.log(`üü¢ Visualized ${o.length} station recommendations on map`)},Ge=()=>re(),ke=l.useCallback(()=>{P(!S),console.log("üéØ Station placement mode:",S?"OFF":"ON")},[S]);return l.useEffect(()=>(j(),()=>{f.current&&(f.current.remove(),f.current=null)}),[]),l.useEffect(()=>{D()},[g,h]),l.useEffect(()=>{G()},[t,h,p.boundaries]),l.useEffect(()=>{if(g.length>0&&p.isochrones){const o=setTimeout(()=>{I()},1e3);return()=>clearTimeout(o)}},[g,s,p.isochrones]),l.useEffect(()=>{if(C&&C>0){const o=setTimeout(()=>{re()},500);return()=>clearTimeout(o)}},[C,re]),e.jsxs(b,{sx:{height:"100%",position:"relative"},children:[e.jsx(b,{ref:w,sx:{height:"100%",width:"100%",borderRadius:1,overflow:"hidden",cursor:S?"crosshair":"default"}}),e.jsxs(de,{elevation:2,sx:{position:"absolute",top:16,right:16,p:1,display:"flex",flexDirection:"column",gap:1,zIndex:1e3},children:[e.jsx(Y,{title:"Add Station",children:e.jsx(K,{color:S?"primary":"default",onClick:ke,sx:{bgcolor:S?"primary.main":"transparent",color:S?"white":"inherit","&:hover":{bgcolor:S?"primary.dark":"action.hover"}},children:e.jsx(Ce,{})})}),e.jsx(Y,{title:"Center on Location",children:e.jsx(K,{children:e.jsx(gt,{})})}),e.jsx(Y,{title:`Toggle Boundary: ${p.boundaries?"ON":"OFF"}`,children:e.jsx(K,{color:p.boundaries?"primary":"default",onClick:()=>y(o=>({...o,boundaries:!o.boundaries})),sx:{bgcolor:p.boundaries?"primary.main":"transparent",color:p.boundaries?"white":"inherit","&:hover":{bgcolor:p.boundaries?"primary.dark":"action.hover"}},children:e.jsx(Ze,{})})})]}),e.jsxs(b,{sx:{position:"absolute",bottom:16,left:16,zIndex:1e3},children:[e.jsx(Q,{label:L.name,size:"small",color:"primary",sx:{mr:1}}),R==="analyzing"&&e.jsx(Q,{label:"Analyzing Coverage...",size:"small",color:"warning"}),R==="complete"&&e.jsx(Q,{label:"Analysis Complete",size:"small",color:"success"}),R==="error"&&e.jsx(Q,{label:"Analysis Error",size:"small",color:"error"})]}),S&&e.jsx(se,{severity:"info",sx:{position:"absolute",top:16,left:16,right:80,zIndex:1e3},children:"Click on the map to place a new fire station"}),g.length===0&&h&&e.jsxs(b,{sx:{position:"absolute",top:"50%",left:"50%",transform:"translate(-50%, -50%)",textAlign:"center",zIndex:1e3,bgcolor:"rgba(255, 255, 255, 0.9)",p:3,borderRadius:2,boxShadow:2},children:[e.jsx(d,{variant:"h6",gutterBottom:!0,children:"No Stations Loaded"}),e.jsx(d,{variant:"body2",color:"text.secondary",children:"Upload station data or use the + button to add stations manually"})]})]})},xt=({stations:g,coverageStandard:t,jurisdictionBoundary:s,onStationDataImport:r,onCoverageStandardChange:v,onStationAdd:c,onStationEdit:C,onStationDelete:w,onBoundaryUpload:f})=>{const[x,h]=l.useState({station_id:"",station_name:"",latitude:"",longitude:"",station_type:"engine"}),U=l.useCallback(()=>{if(!x.station_id||!x.station_name||!x.latitude||!x.longitude){alert("Please fill in all required fields");return}const p={...x,latitude:parseFloat(x.latitude),longitude:parseFloat(x.longitude),operational_status:"active"};c(p),h({station_id:"",station_name:"",latitude:"",longitude:"",station_type:"engine"})},[x,c]),S=l.useCallback(p=>{var N;const y=(N=p.target.files)==null?void 0:N[0];if(!y)return;console.log("üó∫Ô∏è Processing uploaded boundary file:",y.name,"Size:",y.size,"bytes");const R=new FileReader;R.onload=ee=>{var B;try{const O=(B=ee.target)==null?void 0:B.result;if(y.name.toLowerCase().endsWith(".geojson")||y.name.toLowerCase().endsWith(".json")){const W=JSON.parse(O);console.log("‚úÖ Successfully parsed GeoJSON boundary file"),f&&f(W)}else{alert("Please upload a GeoJSON (.geojson or .json) file for jurisdiction boundaries");return}p.target.value=""}catch(O){console.error("‚ùå Error parsing boundary file:",O),alert("Error parsing boundary file. Please check the format and try again.")}},R.readAsText(y)},[f]),P=l.useCallback(p=>{var N;const y=(N=p.target.files)==null?void 0:N[0];if(!y)return;console.log("üìÅ Processing uploaded file:",y.name,"Size:",y.size,"bytes");const R=new FileReader;R.onload=ee=>{var B;try{const W=((B=ee.target)==null?void 0:B.result).split(`
`).filter(i=>i.trim());if(W.length<2){alert("CSV file appears to be empty or invalid");return}const ae=i=>{const j=[];let A="",D=!1;for(let G=0;G<i.length;G++){const I=i[G];I==='"'?D=!D:I===","&&!D?(j.push(A.trim()),A=""):A+=I}return j.push(A.trim()),j},L=ae(W[0]);console.log("üìä CSV Headers:",L);const q=[];for(let i=1;i<W.length;i++){const j=ae(W[i]);if(j.length!==L.length){console.warn(`Row ${i} has ${j.length} values but ${L.length} headers. Skipping.`);continue}const A={};L.forEach((D,G)=>{const I=j[G];D==="latitude"||D==="longitude"?A[D]=parseFloat(I):D==="apparatus_count"||D==="staffing_level"?A[D]=parseInt(I)||0:A[D]=I}),A.station_id&&A.station_name&&!isNaN(A.latitude)&&!isNaN(A.longitude)?q.push(A):console.warn(`Row ${i} missing required fields:`,A)}if(console.log("‚úÖ Successfully parsed",q.length,"stations from CSV"),q.length===0){alert("No valid stations found in CSV file. Please check the format.");return}r(q),p.target.value=""}catch(O){console.error("‚ùå Error parsing CSV file:",O),alert("Error parsing CSV file. Please check the format and try again.")}},R.readAsText(y)},[r]);return e.jsxs(b,{sx:{width:"100%",height:"100%",overflow:"auto"},children:[e.jsxs(b,{sx:{p:2,borderBottom:1,borderColor:"divider"},children:[e.jsx(d,{variant:"h6",gutterBottom:!0,children:"Station Coverage Analysis"}),e.jsx(d,{variant:"body2",color:"text.secondary",children:"Configure stations and analysis parameters"})]}),e.jsxs(pe,{defaultExpanded:!0,children:[e.jsx(ue,{expandIcon:e.jsx(he,{}),children:e.jsxs(b,{sx:{display:"flex",alignItems:"center",gap:1},children:[e.jsx(ge,{color:"primary"}),e.jsx(d,{variant:"subtitle1",children:"Station Data"}),e.jsx(Q,{label:`${g.length} stations`,size:"small"})]})}),e.jsxs(me,{children:[e.jsxs(b,{sx:{mb:2},children:[e.jsx(d,{variant:"subtitle2",gutterBottom:!0,children:"Import Station Data"}),e.jsxs(H,{variant:"outlined",component:"label",startIcon:e.jsx(xe,{}),fullWidth:!0,sx:{mb:2},children:["Upload CSV/Excel",e.jsx("input",{type:"file",hidden:!0,accept:".csv,.xlsx,.xls",onChange:P})]}),e.jsx(d,{variant:"caption",color:"text.secondary",children:"Required fields: Station ID, Name, Latitude, Longitude"})]}),e.jsx(We,{sx:{my:2}}),e.jsxs(b,{children:[e.jsx(d,{variant:"subtitle2",gutterBottom:!0,children:"Add Station Manually"}),e.jsx(V,{fullWidth:!0,label:"Station ID",value:x.station_id,onChange:p=>h(y=>({...y,station_id:p.target.value})),size:"small",sx:{mb:1}}),e.jsx(V,{fullWidth:!0,label:"Station Name",value:x.station_name,onChange:p=>h(y=>({...y,station_name:p.target.value})),size:"small",sx:{mb:1}}),e.jsxs(b,{sx:{display:"flex",gap:1,mb:1},children:[e.jsx(V,{label:"Latitude",value:x.latitude,onChange:p=>h(y=>({...y,latitude:p.target.value})),size:"small",type:"number",sx:{flex:1}}),e.jsx(V,{label:"Longitude",value:x.longitude,onChange:p=>h(y=>({...y,longitude:p.target.value})),size:"small",type:"number",sx:{flex:1}})]}),e.jsxs(V,{fullWidth:!0,select:!0,label:"Station Type",value:x.station_type,onChange:p=>h(y=>({...y,station_type:p.target.value})),size:"small",sx:{mb:2},SelectProps:{native:!0},children:[e.jsx("option",{value:"engine",children:"Engine Company"}),e.jsx("option",{value:"ladder",children:"Ladder Company"}),e.jsx("option",{value:"rescue",children:"Rescue Company"}),e.jsx("option",{value:"hazmat",children:"Hazmat Unit"}),e.jsx("option",{value:"ems",children:"EMS Station"})]}),e.jsx(H,{fullWidth:!0,variant:"contained",onClick:U,startIcon:e.jsx(Ce,{}),children:"Add Station"})]}),g.length>0&&e.jsxs(b,{sx:{mt:2},children:[e.jsx(d,{variant:"subtitle2",gutterBottom:!0,children:"Current Stations"}),e.jsx(Ue,{dense:!0,children:g.map((p,y)=>e.jsxs(Oe,{secondaryAction:e.jsxs(b,{children:[e.jsx(Y,{title:"Edit Station",children:e.jsx(K,{size:"small",onClick:()=>C(p),children:e.jsx(Be,{fontSize:"small"})})}),e.jsx(Y,{title:"Delete Station",children:e.jsx(K,{size:"small",onClick:()=>w(p.station_id),children:e.jsx(Qe,{fontSize:"small"})})})]}),children:[e.jsx(Ve,{children:e.jsx(ge,{fontSize:"small"})}),e.jsx(He,{primary:p.station_name,secondary:`${p.station_id} ‚Ä¢ ${p.station_type}`})]},p.station_id||y))})]})]})]}),e.jsxs(pe,{defaultExpanded:!0,children:[e.jsx(ue,{expandIcon:e.jsx(he,{}),children:e.jsxs(b,{sx:{display:"flex",alignItems:"center",gap:1},children:[e.jsx(et,{color:"primary"}),e.jsx(d,{variant:"subtitle1",children:"NFPA Standards"}),e.jsx(Q,{label:t.toUpperCase(),size:"small",color:"primary"})]})}),e.jsxs(me,{children:[e.jsxs(qe,{component:"fieldset",children:[e.jsx(Je,{component:"legend",children:"Response Time Standard"}),e.jsxs(tt,{value:t,onChange:p=>v(p.target.value),children:[e.jsx(ye,{value:"nfpa1710",control:e.jsx(ve,{}),label:e.jsxs(b,{children:[e.jsx(d,{variant:"body2",children:"NFPA 1710 - Career Departments"}),e.jsx(d,{variant:"caption",color:"text.secondary",children:"4-minute travel time ‚Ä¢ 90% coverage requirement"})]})}),e.jsx(ye,{value:"nfpa1720",control:e.jsx(ve,{}),label:e.jsxs(b,{children:[e.jsx(d,{variant:"body2",children:"NFPA 1720 - Volunteer Departments"}),e.jsx(d,{variant:"caption",color:"text.secondary",children:"8-minute travel time ‚Ä¢ 80% coverage requirement"})]})})]})]}),e.jsx(se,{severity:"info",sx:{mt:2},children:e.jsx(d,{variant:"body2",children:"NFPA standards define response time requirements for fire departments. Career departments (1710) have stricter requirements than volunteer departments (1720)."})})]})]}),e.jsxs(pe,{children:[e.jsx(ue,{expandIcon:e.jsx(he,{}),children:e.jsxs(b,{sx:{display:"flex",alignItems:"center",gap:1},children:[e.jsx(fe,{color:"primary"}),e.jsx(d,{variant:"subtitle1",children:"Analysis Configuration"})]})}),e.jsxs(me,{children:[e.jsx(d,{variant:"body2",paragraph:!0,children:"Configure analysis parameters and jurisdiction boundaries."}),e.jsx(H,{variant:"outlined",fullWidth:!0,sx:{mb:1},children:"Draw Jurisdiction Boundary"}),e.jsxs(H,{variant:"outlined",component:"label",fullWidth:!0,sx:{mb:1},startIcon:e.jsx(xe,{}),children:["Upload Boundary File",e.jsx("input",{type:"file",hidden:!0,accept:".geojson,.json",onChange:S})]}),s&&e.jsx(se,{severity:"success",sx:{mb:1},children:e.jsx(d,{variant:"body2",children:"Jurisdiction boundary loaded successfully"})}),e.jsx(d,{variant:"caption",color:"text.secondary",children:"Define your service area to calculate accurate coverage metrics"})]})]})]})};class yt{constructor(t,s){oe(this,"pdf");oe(this,"config");oe(this,"data");oe(this,"pageNumber",1);oe(this,"yPosition",20);oe(this,"colors",{primary:"#1976d2",secondary:"#0d47a1",success:"#2e7d32",warning:"#f57c00",error:"#d32f2f",station:"#ff5722",coverage:"#4caf50",gap:"#f44336",recommendation:"#2196f3",text:"#333333",lightGray:"#f5f5f5",mediumGray:"#9e9e9e"});this.pdf=new Ye("portrait","mm","a4"),this.config=t,this.data=s,console.log("üìã PDF DEBUG: autoTable import:",typeof ce),typeof ce=="function"?(this.pdf.autoTable=ce.bind(null,this.pdf),console.log("üìã PDF DEBUG: ‚úÖ autoTable attached successfully")):console.error("üìã PDF DEBUG: ‚ùå autoTable is not a function:",ce),t.customBranding&&(this.colors.primary=t.customBranding.primaryColor,this.colors.secondary=t.customBranding.secondaryColor)}async generateReport(){var t,s,r;return console.log("üöÄ GENERATING STATION COVERAGE REPORT"),console.log("üìã PDF DEBUG: jsPDF instance created:",!!this.pdf),console.log("üìã PDF DEBUG: autoTable plugin loaded:",!!this.pdf.autoTable),console.log("üìã PDF DEBUG: Report data:",this.data),console.log("üìã PDF DEBUG: Analysis results:",this.data.analysisResults),console.log("üìã PDF DEBUG: Stations array:",Array.isArray(this.data.stations),(t=this.data.stations)==null?void 0:t.length),console.log("üìã PDF DEBUG: Gaps array:",Array.isArray((s=this.data.analysisResults)==null?void 0:s.identifiedGaps),(r=this.data.analysisResults)==null?void 0:r.identifiedGaps),this.addTitlePage(),this.config.includeSections.summary&&this.addExecutiveSummary(),this.config.includeSections.stationInventory&&this.addStationInventory(),this.config.includeSections.coverageAnalysis&&this.addCoverageAnalysis(),this.config.includeSections.gapAssessment&&this.addGapAssessment(),this.config.includeSections.recommendations&&this.addRecommendations(),this.config.includeSections.nfpaCompliance&&this.addNFPACompliance(),this.config.includeSections.performanceMetrics&&this.addPerformanceMetrics(),this.addFooterToAllPages(),new Promise(v=>{const c=this.pdf.output("blob");console.log("‚úÖ PDF generated successfully, size:",c.size,"bytes"),v(c)})}addTitlePage(){if(this.pdf.setFillColor(this.colors.primary),this.pdf.rect(0,0,210,297,"F"),this.config.departmentLogo)try{this.pdf.addImage(this.config.departmentLogo,"PNG",85,50,40,40)}catch(s){console.warn("Failed to add logo:",s)}this.pdf.setTextColor(255,255,255),this.pdf.setFontSize(24),this.pdf.setFont("helvetica","bold"),this.centerText(this.config.title,120),this.config.subtitle&&(this.pdf.setFontSize(16),this.pdf.setFont("helvetica","normal"),this.centerText(this.config.subtitle,135)),this.pdf.setFontSize(18),this.pdf.setFont("helvetica","bold"),this.centerText(this.config.departmentName,160),this.pdf.setFontSize(12),this.pdf.setFont("helvetica","normal"),this.centerText(`Generated: ${new Date().toLocaleDateString()}`,180);const t=this.data.coverageStandard.toUpperCase();this.centerText(`Analysis Standard: ${t}`,195),this.config.chiefName&&(this.pdf.setFontSize(14),this.centerText(`${this.config.chiefTitle||"Fire Chief"}: ${this.config.chiefName}`,220)),this.addNewPage()}addExecutiveSummary(){var U,S,P,p,y,R,N;this.addSectionHeader("Executive Summary");const t=this.data.analysisResults||{},s=this.data.coverageStandard==="nfpa1710"?"NFPA 1710":"NFPA 1720",r=t.totalStations||((U=this.data.stations)==null?void 0:U.length)||0,v=((S=t.coverageMetrics)==null?void 0:S.nfpaCompliance)||0,c=((P=t.coverageMetrics)==null?void 0:P.populationCovered)||0,C=((p=t.coverageMetrics)==null?void 0:p.areaCovered)||0,w=((y=t.identifiedGaps)==null?void 0:y.length)||0,f=((R=t.recommendedStations)==null?void 0:R.length)||0;this.pdf.setFontSize(11),this.pdf.setTextColor(this.colors.text);const x=((N=this.config.customText)==null?void 0:N.executiveSummary)||`This report presents a comprehensive analysis of fire station coverage for ${this.config.departmentName}. The analysis evaluated ${r} fire stations against ${s} standards, achieving ${v.toFixed(1)}% compliance. ${w} coverage gaps were identified, with ${f} strategic station placements recommended to improve service delivery.`;this.addWrappedText(x,15),this.yPosition+=10,this.addSubHeader("Key Performance Indicators");const h=[["Total Fire Stations",r.toString()],["Coverage Standard",s],["Population Coverage",`${c.toFixed(1)}%`],["Area Coverage",`${C.toFixed(1)}%`],["NFPA Compliance",`${v.toFixed(1)}%`],["Identified Gaps",w.toString()],["Recommended Stations",f.toString()]];this.pdf.autoTable({startY:this.yPosition,head:[["Metric","Value"]],body:h,theme:"grid",styles:{fontSize:10},headStyles:{fillColor:this.colors.primary},margin:{left:15,right:15}}),this.yPosition=this.pdf.lastAutoTable.finalY+10}addStationInventory(){this.addSectionHeader("Fire Station Inventory");const s=(Array.isArray(this.data.stations)?this.data.stations:[]).map(r=>{var v,c;return[r.station_id,r.station_name,r.station_type||"N/A",((v=r.apparatus_count)==null?void 0:v.toString())||"N/A",((c=r.staffing_level)==null?void 0:c.toString())||"N/A",r.operational_status,`${r.latitude.toFixed(4)}, ${r.longitude.toFixed(4)}`]});this.pdf.autoTable({startY:this.yPosition,head:[["Station ID","Station Name","Type","Apparatus","Staffing","Status","Coordinates"]],body:s,theme:"grid",styles:{fontSize:9},headStyles:{fillColor:this.colors.station},margin:{left:15,right:15},columnStyles:{0:{cellWidth:20},1:{cellWidth:35},2:{cellWidth:25},3:{cellWidth:20},4:{cellWidth:20},5:{cellWidth:25},6:{cellWidth:35}}}),this.yPosition=this.pdf.lastAutoTable.finalY+15}addCoverageAnalysis(){var f,x,h;this.addSectionHeader("Coverage Analysis");const t=this.data.analysisResults||{},s=this.data.coverageStandard==="nfpa1710"?"NFPA 1710 (4-minute travel time)":"NFPA 1720 (8-minute travel time)";this.pdf.setFontSize(11),this.pdf.setTextColor(this.colors.text);const r=`Coverage analysis was performed using ${s} standards. The analysis evaluated response coverage across the jurisdiction to identify areas meeting NFPA compliance requirements and areas requiring improvement.`;this.addWrappedText(r,15),this.yPosition+=10,this.addSubHeader("Coverage Metrics");const v=((f=t.coverageMetrics)==null?void 0:f.populationCovered)||0,c=((x=t.coverageMetrics)==null?void 0:x.areaCovered)||0,C=((h=t.coverageMetrics)==null?void 0:h.nfpaCompliance)||0,w=[["Population Coverage",`${v.toFixed(1)}%`,this.getCoverageStatus(v)],["Geographic Area Coverage",`${c.toFixed(1)}%`,this.getCoverageStatus(c)],["Overall NFPA Compliance",`${C.toFixed(1)}%`,this.getCoverageStatus(C)]];this.pdf.autoTable({startY:this.yPosition,head:[["Coverage Type","Percentage","Status"]],body:w,theme:"grid",styles:{fontSize:10},headStyles:{fillColor:this.colors.coverage},margin:{left:15,right:15}}),this.yPosition=this.pdf.lastAutoTable.finalY+15}addGapAssessment(){var v;this.addSectionHeader("Coverage Gap Assessment");const t=(v=this.data.analysisResults)==null?void 0:v.identifiedGaps,s=Array.isArray(t)?t:[];if(s.length===0){this.pdf.setFontSize(11),this.pdf.setTextColor(this.colors.success),this.pdf.setFont("helvetica","normal"),this.addWrappedText("‚úì No significant coverage gaps identified. Current station placement provides adequate coverage according to NFPA standards.",15),this.yPosition+=15;return}this.pdf.setFontSize(11),this.pdf.setTextColor(this.colors.text),this.addWrappedText(`${s.length} coverage gaps were identified through grid-based analysis. These areas do not meet NFPA response time requirements and should be prioritized for improvement.`,15),this.yPosition+=10;const r=s.map((c,C)=>[`Gap ${C+1}`,c.severity.charAt(0).toUpperCase()+c.severity.slice(1),c.estimatedPopulation.toString(),`${c.center[0].toFixed(4)}, ${c.center[1].toFixed(4)}`,"Response time exceeds NFPA standards"]);this.pdf.autoTable({startY:this.yPosition,head:[["Gap ID","Severity","Est. Population","Location","Issue"]],body:r,theme:"grid",styles:{fontSize:9},headStyles:{fillColor:this.colors.gap},margin:{left:15,right:15}}),this.yPosition=this.pdf.lastAutoTable.finalY+15}addRecommendations(){var v;this.addSectionHeader("Station Placement Recommendations");const t=(v=this.data.analysisResults)==null?void 0:v.recommendedStations,s=Array.isArray(t)?t:[];if(s.length===0){this.pdf.setFontSize(11),this.pdf.setTextColor(this.colors.success),this.pdf.setFont("helvetica","normal"),this.addWrappedText("‚úì Current station configuration is optimal. No additional stations recommended at this time.",15),this.yPosition+=15;return}this.pdf.setFontSize(11),this.pdf.setTextColor(this.colors.text),this.addWrappedText(`${s.length} strategic station placements are recommended to improve coverage and NFPA compliance. These recommendations are based on gap analysis and population density.`,15),this.yPosition+=10;const r=s.map((c,C)=>[`Station ${C+1}`,c.priority.charAt(0).toUpperCase()+c.priority.slice(1),c.gapsCovered.toString(),c.estimatedPopulationServed.toString(),`${c.position[0].toFixed(4)}, ${c.position[1].toFixed(4)}`,c.reasoning]);this.pdf.autoTable({startY:this.yPosition,head:[["Recommendation","Priority","Gaps Covered","Population Served","Location","Rationale"]],body:r,theme:"grid",styles:{fontSize:9},headStyles:{fillColor:this.colors.recommendation},margin:{left:15,right:15},columnStyles:{5:{cellWidth:50}}}),this.yPosition=this.pdf.lastAutoTable.finalY+15}addNFPACompliance(){var c,C;this.addSectionHeader("NFPA Compliance Assessment");const t=this.data.coverageStandard,s=((C=(c=this.data.analysisResults)==null?void 0:c.coverageMetrics)==null?void 0:C.nfpaCompliance)||0;this.addSubHeader(`${t.toUpperCase()} Requirements`);const r=t==="nfpa1710"?{department:"Career Fire Departments",travelTime:"4 minutes",responseTime:"8 minutes total",coverage:"90%"}:{department:"Volunteer Fire Departments",travelTime:"8 minutes",responseTime:"10 minutes total",coverage:"80%"},v=[["Department Type",r.department],["Travel Time Standard",r.travelTime],["Total Response Time",r.responseTime],["Coverage Requirement",r.coverage],["Current Compliance",`${s.toFixed(1)}%`],["Compliance Status",s>=(t==="nfpa1710"?90:80)?"COMPLIANT":"NON-COMPLIANT"]];this.pdf.autoTable({startY:this.yPosition,head:[["Requirement","Value"]],body:v,theme:"grid",styles:{fontSize:10},headStyles:{fillColor:this.colors.primary},margin:{left:15,right:15}}),this.yPosition=this.pdf.lastAutoTable.finalY+15}addPerformanceMetrics(){var f,x,h;this.addSectionHeader("Performance Metrics");const t=this.data.analysisResults||{},s=t.analysisDate?new Date(t.analysisDate).toLocaleDateString():new Date().toLocaleDateString(),r=t.totalStations||((f=this.data.stations)==null?void 0:f.length)||0,v=((x=t.identifiedGaps)==null?void 0:x.length)||0,c=((h=t.recommendedStations)==null?void 0:h.length)||0,C=`Analysis completed on ${s} using advanced grid-based coverage algorithms. The assessment evaluated ${r} stations across the jurisdiction to identify coverage gaps and optimization opportunities.`;this.pdf.setFontSize(11),this.pdf.setTextColor(this.colors.text),this.addWrappedText(C,15),this.yPosition+=10,this.addSubHeader("Analysis Summary");const w=[["Analysis Date",s],["Total Stations Evaluated",r.toString()],["Coverage Gaps Identified",v.toString()],["Recommended Improvements",c.toString()],["Analysis Method","Grid-based geographic analysis"],["Standard Applied",this.data.coverageStandard.toUpperCase()]];this.pdf.autoTable({startY:this.yPosition,head:[["Metric","Value"]],body:w,theme:"grid",styles:{fontSize:10},headStyles:{fillColor:this.colors.secondary},margin:{left:15,right:15}}),this.yPosition=this.pdf.lastAutoTable.finalY+15}addSectionHeader(t){this.yPosition>240&&this.addNewPage(),this.pdf.setFontSize(16),this.pdf.setFont("helvetica","bold"),this.pdf.setTextColor(this.colors.primary),this.pdf.text(t,15,this.yPosition),this.yPosition+=15}addSubHeader(t){this.yPosition>260&&this.addNewPage(),this.pdf.setFontSize(12),this.pdf.setFont("helvetica","bold"),this.pdf.setTextColor(this.colors.text),this.pdf.text(t,15,this.yPosition),this.yPosition+=10}addWrappedText(t,s){const v=this.pdf.splitTextToSize(t,180);for(const c of v)this.yPosition>270&&this.addNewPage(),this.pdf.text(c,s,this.yPosition),this.yPosition+=6}centerText(t,s){const v=(210-this.pdf.getTextWidth(t))/2;this.pdf.text(t,v,s)}getCoverageStatus(t){const s=this.data.coverageStandard==="nfpa1710"?90:80;return t>=s?"COMPLIANT":t>=s-10?"PARTIAL":"NON-COMPLIANT"}addNewPage(){this.pdf.addPage(),this.pageNumber++,this.yPosition=20}addFooterToAllPages(){const t=this.pageNumber;for(let s=1;s<=t;s++){this.pdf.setPage(s),this.pdf.setDrawColor(this.colors.mediumGray),this.pdf.line(15,285,195,285),this.pdf.setFontSize(8),this.pdf.setTextColor(this.colors.mediumGray),this.pdf.setFont("helvetica","normal"),this.pdf.text(this.config.departmentName,15,290);const r=this.config.title,v=(210-this.pdf.getTextWidth(r))/2;this.pdf.text(r,v,290);const c=`Page ${s} of ${t}`,C=195-this.pdf.getTextWidth(c);this.pdf.text(c,C,290)}}}const vt=async(g,t)=>await new yt(g,t).generateReport(),St=({open:g,onClose:t,stations:s,analysisResults:r,coverageStandard:v,jurisdictionBoundary:c})=>{const[C,w]=l.useState(0),[f,x]=l.useState(!1),[h,U]=l.useState(null),[S,P]=l.useState({departmentName:"",chiefName:"",chiefTitle:"Fire Chief",customTitle:"",customSubtitle:"",executiveSummary:""}),p=["Template Selection","Department Information","Report Configuration","Generate Report"],y=[{id:"nfpa_compliance",name:"NFPA Compliance Report",description:"Comprehensive NFPA compliance assessment with coverage analysis and gap identification",targetAudience:"Fire Chief, City Council, Insurance Rating Bureau",estimatedPages:12,icon:e.jsx(lt,{sx:{fontSize:40,color:"#1976d2"}}),sections:{summary:!0,stationInventory:!0,coverageAnalysis:!0,gapAssessment:!0,recommendations:!0,nfpaCompliance:!0,performanceMetrics:!0}},{id:"coverage_assessment",name:"Coverage Assessment Report",description:"Geographic coverage analysis with station performance metrics and service area evaluation",targetAudience:"Fire Administration, Emergency Management, City Planning",estimatedPages:8,icon:e.jsx(fe,{sx:{fontSize:40,color:"#4caf50"}}),sections:{summary:!0,stationInventory:!0,coverageAnalysis:!0,gapAssessment:!1,recommendations:!0,nfpaCompliance:!1,performanceMetrics:!0}},{id:"gap_analysis",name:"Coverage Gap Analysis",description:"Detailed gap identification with strategic station placement recommendations",targetAudience:"City Council, Budget Committee, Strategic Planning",estimatedPages:10,icon:e.jsx(Ke,{sx:{fontSize:40,color:"#ff9800"}}),sections:{summary:!0,stationInventory:!1,coverageAnalysis:!0,gapAssessment:!0,recommendations:!0,nfpaCompliance:!1,performanceMetrics:!1}},{id:"strategic_planning",name:"Strategic Planning Document",description:"Long-term strategic analysis for capital improvement planning and resource allocation",targetAudience:"City Manager, Mayor, Capital Planning Committee",estimatedPages:16,icon:e.jsx(ct,{sx:{fontSize:40,color:"#9c27b0"}}),sections:{summary:!0,stationInventory:!0,coverageAnalysis:!0,gapAssessment:!0,recommendations:!0,nfpaCompliance:!0,performanceMetrics:!0}}],R=i=>{U(i),w(1)},N=()=>{w(i=>i+1)},ee=()=>{w(i=>i-1)},B=async()=>{if(!(!h||!r)){x(!0);try{const i={reportType:h.id,title:S.customTitle||h.name,subtitle:S.customSubtitle,departmentName:S.departmentName,chiefName:S.chiefName,chiefTitle:S.chiefTitle,includeSections:h.sections,customText:{executiveSummary:S.executiveSummary}},j={stations:s.map(I=>({station_id:I.station_id,station_name:I.station_name,latitude:I.latitude,longitude:I.longitude,station_type:I.station_type||"Engine Company",apparatus_count:I.apparatus_count,staffing_level:I.staffing_level,operational_status:I.operational_status||"Active"})),coverageStandard:v,jurisdictionBoundary:c,analysisResults:r};console.log("üöÄ Generating Station Coverage Report with config:",i),console.log("üìä Report data:",j);const A=await vt(i,j),D=URL.createObjectURL(A),G=document.createElement("a");G.href=D,G.download=`${S.departmentName.replace(/\s+/g,"_")}_Coverage_Report_${Date.now()}.pdf`,document.body.appendChild(G),G.click(),document.body.removeChild(G),URL.revokeObjectURL(D),console.log("‚úÖ Station Coverage Report generated successfully"),w(0),t()}catch(i){console.error("‚ùå Failed to generate Station Coverage Report:",i),alert("Failed to generate report. Please check the console for details.")}finally{x(!1)}}},O=()=>e.jsxs(b,{children:[e.jsx(d,{variant:"h6",gutterBottom:!0,children:"Select Report Template"}),e.jsx(d,{variant:"body2",color:"text.secondary",paragraph:!0,children:"Choose the report template that best matches your needs and target audience."}),e.jsx(Z,{container:!0,spacing:2,children:y.map(i=>e.jsx(Z,{item:!0,xs:12,md:6,children:e.jsx(Se,{sx:{cursor:"pointer",border:(h==null?void 0:h.id)===i.id?2:1,borderColor:(h==null?void 0:h.id)===i.id?"primary.main":"divider","&:hover":{boxShadow:3}},onClick:()=>R(i),children:e.jsxs(be,{children:[e.jsxs(b,{sx:{display:"flex",alignItems:"center",mb:2},children:[i.icon,e.jsxs(b,{sx:{ml:2},children:[e.jsx(d,{variant:"h6",children:i.name}),e.jsx(Q,{label:`~${i.estimatedPages} pages`,size:"small",color:"primary",variant:"outlined"})]})]}),e.jsx(d,{variant:"body2",paragraph:!0,children:i.description}),e.jsxs(d,{variant:"caption",color:"text.secondary",children:[e.jsx("strong",{children:"Target Audience:"})," ",i.targetAudience]})]})})},i.id))})]}),W=()=>e.jsxs(b,{children:[e.jsx(d,{variant:"h6",gutterBottom:!0,children:"Department Information"}),e.jsx(d,{variant:"body2",color:"text.secondary",paragraph:!0,children:"Enter your department details for the report header and branding."}),e.jsxs(Z,{container:!0,spacing:2,children:[e.jsx(Z,{item:!0,xs:12,children:e.jsx(V,{fullWidth:!0,label:"Department Name *",value:S.departmentName,onChange:i=>P(j=>({...j,departmentName:i.target.value})),placeholder:"Phoenix Fire Department",required:!0})}),e.jsx(Z,{item:!0,xs:12,sm:6,children:e.jsx(V,{fullWidth:!0,label:"Fire Chief Name",value:S.chiefName,onChange:i=>P(j=>({...j,chiefName:i.target.value})),placeholder:"John Smith"})}),e.jsx(Z,{item:!0,xs:12,sm:6,children:e.jsx(V,{fullWidth:!0,label:"Chief Title",value:S.chiefTitle,onChange:i=>P(j=>({...j,chiefTitle:i.target.value})),placeholder:"Fire Chief"})}),e.jsx(Z,{item:!0,xs:12,children:e.jsx(V,{fullWidth:!0,label:"Custom Report Title",value:S.customTitle,onChange:i=>P(j=>({...j,customTitle:i.target.value})),placeholder:"Leave blank to use template default"})}),e.jsx(Z,{item:!0,xs:12,children:e.jsx(V,{fullWidth:!0,label:"Report Subtitle",value:S.customSubtitle,onChange:i=>P(j=>({...j,customSubtitle:i.target.value})),placeholder:"Optional subtitle for the report"})}),e.jsx(Z,{item:!0,xs:12,children:e.jsx(V,{fullWidth:!0,multiline:!0,rows:4,label:"Custom Executive Summary",value:S.executiveSummary,onChange:i=>P(j=>({...j,executiveSummary:i.target.value})),placeholder:"Leave blank to use auto-generated summary"})})]})]}),ae=()=>{var i,j;return e.jsxs(b,{children:[e.jsx(d,{variant:"h6",gutterBottom:!0,children:"Report Configuration"}),e.jsx(d,{variant:"body2",color:"text.secondary",paragraph:!0,children:"Review your report settings before generation."}),h&&e.jsx(Se,{sx:{mb:2},children:e.jsxs(be,{children:[e.jsxs(d,{variant:"subtitle1",gutterBottom:!0,children:["Selected Template: ",h.name]}),e.jsx(d,{variant:"body2",paragraph:!0,children:h.description}),e.jsx(d,{variant:"subtitle2",gutterBottom:!0,children:"Included Sections:"}),e.jsx(b,{sx:{display:"flex",flexWrap:"wrap",gap:1},children:Object.entries(h.sections).map(([A,D])=>D&&e.jsx(Q,{label:A.replace(/([A-Z])/g," $1").replace(/^./,G=>G.toUpperCase()),size:"small",color:"primary",variant:"outlined"},A))})]})}),e.jsx(se,{severity:"info",sx:{mb:2},children:e.jsxs(d,{variant:"body2",children:[e.jsx("strong",{children:"Data Summary:"}),e.jsx("br",{}),"‚Ä¢ ",s.length," fire stations",e.jsx("br",{}),"‚Ä¢ ",v.toUpperCase()," compliance standards",e.jsx("br",{}),"‚Ä¢ ",((i=r==null?void 0:r.identifiedGaps)==null?void 0:i.length)||0," coverage gaps identified",e.jsx("br",{}),"‚Ä¢ ",((j=r==null?void 0:r.recommendedStations)==null?void 0:j.length)||0," station recommendations"]})})]})},L=()=>e.jsx(b,{sx:{textAlign:"center",py:4},children:f?e.jsxs(b,{children:[e.jsx(at,{sx:{mb:2}}),e.jsx(d,{variant:"h6",gutterBottom:!0,children:"Generating Professional Report..."}),e.jsx(d,{variant:"body2",color:"text.secondary",children:"Please wait while we create your PDF report with tables and analysis."})]}):e.jsxs(b,{children:[e.jsx(Fe,{sx:{fontSize:64,color:"primary.main",mb:2}}),e.jsx(d,{variant:"h6",gutterBottom:!0,children:"Ready to Generate Report"}),e.jsx(d,{variant:"body2",color:"text.secondary",paragraph:!0,children:"Your professional station coverage report is ready to be generated."}),e.jsx(H,{variant:"contained",size:"large",startIcon:e.jsx(rt,{}),onClick:B,disabled:!S.departmentName,children:"Generate PDF Report"})]})}),q=i=>{switch(i){case 0:return O();case 1:return W();case 2:return ae();case 3:return L();default:return null}};return e.jsxs(je,{open:g,onClose:t,maxWidth:"lg",fullWidth:!0,PaperProps:{sx:{minHeight:600}},children:[e.jsx(Te,{children:e.jsxs(b,{sx:{display:"flex",alignItems:"center",gap:1},children:[e.jsx(ot,{color:"primary"}),e.jsx(d,{variant:"h6",children:"Station Coverage Report Generator"})]})}),e.jsxs(Pe,{children:[e.jsx(nt,{activeStep:C,sx:{mb:4},children:p.map(i=>e.jsx(st,{children:e.jsx(it,{children:i})},i))}),q(C)]}),e.jsxs(Ae,{children:[e.jsx(H,{onClick:t,disabled:f,children:"Cancel"}),C>0&&C<3&&e.jsx(H,{onClick:ee,disabled:f,children:"Back"}),C<2&&e.jsx(H,{onClick:N,variant:"contained",disabled:!h||C===1&&!S.departmentName,children:"Next"}),C===2&&e.jsx(H,{onClick:()=>w(3),variant:"contained",disabled:!S.departmentName,children:"Continue to Generate"})]})]})},Vt=({mode:g="analysis"})=>{const[t,s]=l.useState(!0),[r,v]=l.useState("coverage"),[c,C]=l.useState(!1),[w,f]=l.useState(!1),[x,h]=l.useState([]),[U,S]=l.useState(null),[P,p]=l.useState("nfpa1710"),[y,R]=l.useState(null),[N,ee]=l.useState(0),B=400,O=l.useCallback(T=>{console.log("üöí Importing station data:",T.length,"stations"),h(T),R(null)},[]),W=l.useCallback(T=>{console.log("‚ûï Adding new station:",T),h(ie=>[...ie,T])},[]),ae=l.useCallback(T=>{console.log("üéØ Station selected:",T.station_name)},[]),L=l.useCallback(T=>{console.log("üìä Analysis updated:",T),R(T)},[]),q=l.useCallback(T=>{console.log("‚úèÔ∏è Edit station:",T.station_id)},[]),i=l.useCallback(T=>{console.log("üóëÔ∏è Delete station:",T),h(ie=>ie.filter(re=>re.station_id!==T))},[]),j=l.useCallback(T=>{console.log("üìè Coverage standard changed to:",T),p(T),R(null)},[]),A=l.useCallback(T=>{console.log("üó∫Ô∏è Boundary data uploaded:",T),S(T)},[]),D=l.useCallback(()=>{if(console.log("üìä Running coverage analysis with NFPA standard:",P),x.length===0){console.warn("No stations available for analysis");return}R(null),ee(T=>T+1),console.log("‚úÖ Analysis triggered - results will be provided by map component")},[x,P]),G=l.useCallback(()=>{console.log("üìã Opening station coverage report generator"),C(!0)},[]),I=l.useCallback(()=>{s(T=>!T)},[]);return e.jsxs(b,{sx:{display:"flex",height:"100vh",overflow:"hidden"},children:[e.jsx(dt,{variant:"persistent",anchor:"left",open:t,sx:{width:t?B:0,flexShrink:0,"& .MuiDrawer-paper":{width:B,boxSizing:"border-box"}},children:e.jsx(xt,{stations:x,coverageStandard:P,jurisdictionBoundary:U,onStationDataImport:O,onCoverageStandardChange:j,onStationAdd:W,onStationEdit:q,onStationDelete:i,onBoundaryUpload:A})}),e.jsxs(b,{component:"main",sx:{flexGrow:1,display:"flex",flexDirection:"column",overflow:"hidden",transition:"margin 0.3s ease-in-out",marginLeft:t?`${B}px`:"0px"},children:[e.jsx(de,{elevation:1,sx:{borderRadius:0,borderBottom:1,borderColor:"divider"},children:e.jsxs(Xe,{sx:{justifyContent:"space-between",px:3},children:[e.jsxs(b,{sx:{display:"flex",alignItems:"center",gap:2},children:[e.jsx(ge,{color:"primary",sx:{fontSize:28}}),e.jsxs(b,{children:[e.jsx(d,{variant:"h5",component:"h1",sx:{fontWeight:600,color:"primary.main"},children:"Station Coverage Optimizer"}),e.jsx(d,{variant:"body2",color:"text.secondary",children:"Enterprise coverage analysis with NFPA compliance assessment"})]}),P&&e.jsx(Q,{label:P.toUpperCase(),size:"small",color:"primary",variant:"outlined"})]}),e.jsxs(b,{sx:{display:"flex",gap:1},children:[e.jsx(Y,{title:"Toggle Sidebar",children:e.jsx(K,{onClick:I,children:e.jsx(pt,{})})}),e.jsx(Y,{title:"Run Coverage Analysis",children:e.jsx(H,{variant:"contained",color:"primary",startIcon:e.jsx(Fe,{}),onClick:D,disabled:x.length===0,children:"Analyze Coverage"})}),e.jsx(Y,{title:"Generate Professional Report",children:e.jsx(K,{color:"primary",onClick:G,disabled:!y,sx:{bgcolor:"primary.main",color:"white","&:hover":{bgcolor:"primary.dark"},"&:disabled":{bgcolor:"grey.300",color:"grey.500"}},children:e.jsx(ut,{})})}),e.jsx(Y,{title:"Settings",children:e.jsx(K,{onClick:()=>f(!0),children:e.jsx(ht,{})})}),e.jsx(Y,{title:"About Station Coverage Optimizer",children:e.jsx(K,{children:e.jsx(mt,{})})})]})]})}),e.jsx(b,{sx:{flexGrow:1,display:"flex",overflow:"hidden"},children:e.jsx(b,{sx:{flexGrow:1,p:2,overflow:"auto"},children:x.length===0?e.jsxs(de,{sx:{p:4,textAlign:"center",mt:4},children:[e.jsx(fe,{sx:{fontSize:64,color:"text.secondary",mb:2}}),e.jsx(d,{variant:"h5",gutterBottom:!0,children:"Welcome to Station Coverage Optimizer"}),e.jsx(d,{variant:"body1",color:"text.secondary",paragraph:!0,children:"Upload station data to begin coverage analysis and optimization."}),e.jsxs(se,{severity:"info",sx:{mt:2,textAlign:"left"},children:[e.jsx(d,{variant:"subtitle2",gutterBottom:!0,children:"Getting Started:"}),e.jsxs(d,{variant:"body2",component:"div",children:["1. Use the sidebar to upload station data (CSV, Excel) or import from Data Formatter",e.jsx("br",{}),"2. Define your jurisdiction boundary (draw or upload)",e.jsx("br",{}),"3. Select NFPA standard (1710 for career, 1720 for volunteer departments)",e.jsx("br",{}),"4. Run coverage analysis to identify gaps and optimization opportunities"]})]})]}):e.jsxs(de,{sx:{height:"100%",display:"flex",flexDirection:"column"},children:[e.jsxs(b,{sx:{p:2,borderBottom:1,borderColor:"divider"},children:[e.jsx(d,{variant:"h6",gutterBottom:!0,children:"Interactive Coverage Map"}),e.jsxs(d,{variant:"body2",color:"text.secondary",gutterBottom:!0,children:[x.length," stations loaded ‚Ä¢ ",P.toUpperCase()," standards"]}),y&&e.jsxs(se,{severity:"success",sx:{mt:1},children:["Coverage analysis: ",y.coverageMetrics.nfpaCompliance.toFixed(1),"% NFPA compliance ‚Ä¢",y.identifiedGaps," gaps identified ‚Ä¢",y.recommendedStations," stations recommended"]})]}),e.jsx(b,{sx:{flexGrow:1,minHeight:0},children:e.jsx(ft,{stations:x,jurisdictionBoundary:U,coverageStandard:P,onStationAdd:W,onStationSelect:ae,onAnalysisUpdate:L,analysisTriggered:N})})]})})})]}),e.jsxs(je,{open:w,onClose:()=>f(!1),maxWidth:"md",fullWidth:!0,children:[e.jsx(Te,{children:"Station Coverage Settings"}),e.jsx(Pe,{children:e.jsx(d,{variant:"body1",children:"Settings panel for NFPA standards, travel speeds, response time thresholds, etc."})}),e.jsx(Ae,{children:e.jsx(H,{onClick:()=>f(!1),children:"Close"})})]}),e.jsx(St,{open:c,onClose:()=>C(!1),stations:x,analysisResults:y,coverageStandard:P,jurisdictionBoundary:U})]})};export{Vt as default};
