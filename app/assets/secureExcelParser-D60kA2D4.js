const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/exceljs.min-fatvKBVP.js","assets/index-CpPQcMW2.js"])))=>i.map(i=>d[i]);
var d=Object.defineProperty;var x=(t,e,r)=>e in t?d(t,e,{enumerable:!0,configurable:!0,writable:!0,value:r}):t[e]=r;var u=(t,e,r)=>x(t,typeof e!="symbol"?e+"":e,r);import{b6 as w}from"./index-CpPQcMW2.js";import"./purify.es-CQJ0hv7W.js";const h={maxStringLength:1e4,maxArrayLength:1e3,maxObjectDepth:10,allowedMimeTypes:["text/csv","application/vnd.ms-excel","application/vnd.openxmlformats-officedocument.spreadsheetml.sheet","application/json","text/xml","application/xml","text/plain","application/pdf"],maxFileSize:50*1024*1024,timeoutMs:3e4},m=t=>{if(t==null)return"";const e=String(t);if(e.length>h.maxStringLength)throw new Error(`String too long (${e.length} > ${h.maxStringLength})`);return e.replace(/<[^>]*>/g,"").replace(/javascript:/gi,"").replace(/data:/gi,"").replace(/vbscript:/gi,"").replace(/on\w+=/gi,"").trim()},f=(t,e=0)=>{if(e>h.maxObjectDepth)throw new Error(`Object too deeply nested (${e} > ${h.maxObjectDepth})`);if(t==null)return t;if(typeof t=="function"||typeof t=="object"&&t.constructor===RegExp)return{};if(Array.isArray(t)){if(t.length>h.maxArrayLength)throw new Error(`Array too long (${t.length} > ${h.maxArrayLength})`);return t.map(r=>f(r,e+1))}if(typeof t=="object"){const r=Object.create(null);for(const n in t){if(!t.hasOwnProperty(n)||n==="__proto__"||n==="constructor"||n==="prototype")continue;const o=m(n);o.length!==0&&(r[o]=f(t[n],e+1))}return r}return typeof t=="string"?m(t):typeof t=="number"?isFinite(t)?t:0:typeof t=="boolean"?t:""},g=t=>{if(t.size>h.maxFileSize)throw new Error(`File too large (${t.size} > ${h.maxFileSize})`);if(!h.allowedMimeTypes.includes(t.type))throw new Error(`Invalid file type: ${t.type}`);const e=m(t.name);if(e.length===0||e!==t.name)throw new Error("Invalid filename");if(/\.(exe|bat|cmd|com|pif|scr|vbs|js|jar|zip|rar)$/i.test(e))throw new Error(`Suspicious file extension: ${e}`)},y=(t,e=h.timeoutMs)=>{const r=new Promise((n,o)=>{setTimeout(()=>{o(new Error(`Operation timed out after ${e}ms`))},e)});return Promise.race([t,r])},E=t=>{if(!t||typeof t!="object")throw new Error("Invalid workbook data");const e={SheetNames:Array.isArray(t.SheetNames)?t.SheetNames.slice(0,10).map(m):[],Sheets:{}};if(t.Sheets&&typeof t.Sheets=="object")for(const r of e.SheetNames)t.Sheets[r]&&(e.Sheets[r]=f(t.Sheets[r],0));return e},S=t=>{const e=t.columns.map(n=>m(n)).filter(n=>n.length>0).slice(0,100),r=t.data.slice(0,1e4).map(n=>f(n)).filter(n=>n&&typeof n=="object");return{columns:e,data:r}};class v{constructor(e=100,r=6e4){u(this,"operations",new Map);u(this,"maxOperations");u(this,"windowMs");this.maxOperations=e,this.windowMs=r}canProceed(e){const r=Date.now(),o=(this.operations.get(e)||[]).filter(l=>r-l<this.windowMs);return o.length>=this.maxOperations?!1:(o.push(r),this.operations.set(e,o),!0)}}const z=new v,F={maxRows:1e4,maxColumns:100,maxFileSize:50*1024*1024,timeoutMs:3e4,sheetIndex:0,sheetName:""};class A{constructor(e={}){u(this,"options");this.options={...F,...e}}async parseExcelFile(e){const r=`excel_parse_${e.name}_${e.size}`;if(!z.canProceed(r))throw new Error("Rate limit exceeded for file parsing");if(g(e),e.size>this.options.maxFileSize)throw new Error(`Excel file too large: ${e.size} bytes`);return y(this.parseExcelFileInternal(e),this.options.timeoutMs)}async parseExcelFileInternal(e){return new Promise((r,n)=>{const o=new FileReader;o.onload=async l=>{var c;try{const i=(c=l.target)==null?void 0:c.result;if(!i){n(new Error("Failed to read Excel file"));return}if(!(i instanceof ArrayBuffer)){n(new Error("Invalid file format - expected binary data"));return}const a=await this.parseExcelData(i),s=S(a),p=this.applyLimits(s);r(p)}catch(i){n(new Error(`Error parsing Excel file: ${i instanceof Error?i.message:"Unknown error"}`))}},o.onerror=()=>{n(new Error("Error reading Excel file"))},o.readAsArrayBuffer(e)})}async parseExcelData(e){const r=await w(()=>import("./exceljs.min-fatvKBVP.js").then(s=>s.e),__vite__mapDeps([0,1]));let n;try{n=new r.Workbook,await n.xlsx.load(e)}catch{throw new Error("Failed to parse Excel file: Invalid or corrupted file")}const o=E(n),l=this.getTargetSheet(o),c=await this.convertSheetToJsonExcelJS(l);if(c.length===0)throw new Error("Excel file is empty or contains no data");const i=this.extractColumns(c),a=this.extractData(c,i);return{columns:i,data:a}}getTargetSheet(e){if(!e.worksheets||e.worksheets.length===0)throw new Error("Excel file contains no sheets");let r;if(this.options.sheetName){if(r=e.getWorksheet(this.options.sheetName),!r)throw new Error(`Sheet "${this.options.sheetName}" not found`)}else{if(this.options.sheetIndex>=e.worksheets.length)throw new Error(`Sheet index ${this.options.sheetIndex} out of range`);r=e.worksheets[this.options.sheetIndex]}if(!r)throw new Error("Sheet is empty or corrupted");return r}async convertSheetToJsonExcelJS(e){try{const r=[],n=Math.min(e.actualRowCount||0,this.options.maxRows),o=Math.min(e.actualColumnCount||0,this.options.maxColumns);for(let l=1;l<=n;l++){const c=e.getRow(l),i=[];for(let a=1;a<=o;a++){const s=c.getCell(a);let p="";s&&s.value!==null&&s.value!==void 0&&(typeof s.value=="string"?p=s.value:typeof s.value=="number"?p=s.value.toString():s.value instanceof Date?p=s.value.toISOString():s.value&&typeof s.value=="object"&&"text"in s.value?p=s.value.text||"":p=String(s.value)),i.push(p)}i.some(a=>a!=="")&&r.push(i)}return r}catch{throw new Error("Failed to convert sheet to JSON")}}extractColumns(e){if(e.length===0)return[];const r=e[0];if(!Array.isArray(r))throw new Error("Invalid data format");return r.map(o=>String(o||"")).filter(o=>o.trim().length>0).slice(0,this.options.maxColumns)}extractData(e,r){const n=[];for(let o=1;o<e.length&&n.length<this.options.maxRows;o++){const l=e[o];if(!Array.isArray(l))continue;const c={};for(let i=0;i<r.length;i++){const a=l[i],s=r[i];a!=null?c[s]=String(a):c[s]=""}n.push(c)}return n}applyLimits(e){return{columns:e.columns.slice(0,this.options.maxColumns),data:e.data.slice(0,this.options.maxRows)}}}const $=async(t,e={})=>new A(e).parseExcelFile(t);export{A as SecureExcelParser,$ as parseExcelFileSecurely};
