var _e=Object.defineProperty;var Me=(h,t,s)=>t in h?_e(h,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):h[t]=s;var oe=(h,t,s)=>Me(h,typeof t!="symbol"?t+"":t,s);import{j as e,r as l,B as g}from"./index-BWnCbfLE.js";import{L as T}from"./leaflet-BkbUnQ5p.js";import{c as Ee,P as de,T as c}from"./Typography-DTEROZma.js";import{T as J,A as Ce,U as xe,E as We}from"./Edit-CPwaEC9z.js";import{f as K,C as Q,A as se,D as Be,T as U,L as Oe,h as Ue,i as Ve,j as He,F as qe,P as Je,d as ye,E as Ye,a as je,b as Te,c as Pe,e as Ae,G as Z,y as Xe}from"./jspdf.es.min-DB0GH3b1.js";import{L as Ze,S as ge}from"./Place-v1m77O2L.js";import{A as pe,a as ue,E as he,b as me,G as Ke}from"./Warning-Ln0QKkAi.js";import{B as V}from"./Button-TxIH58zE.js";import{D as Qe}from"./Delete-DYDxkfnG.js";import{T as et}from"./Timeline-DDNYNwFm.js";import{R as tt,a as ve}from"./RadioGroup-C3BB_iDU.js";import{M as fe}from"./Map-DVoXdcFL.js";import{a as ce,L as at}from"./jspdf.plugin.autotable-B_OCGz41.js";import{L as ot}from"./LocalFireDepartment-C8eQqXYR.js";import{S as nt,a as st,b as it,D as rt}from"./Download-Vrv9VVl9.js";import{A as Fe}from"./Assessment-DdJcCXf0.js";import{C as Se,a as be}from"./CardContent-DBX58dGG.js";import{C as lt,B as ct}from"./Gavel-BDEo0DLV.js";import{D as dt,M as pt,E as ut}from"./Menu-x95ddpAp.js";import{S as ht}from"./Settings-DmKmkJY8.js";import{I as mt}from"./Info-DgbMr7S_.js";import"./Popper-14ixPozN.js";import"./FormGroup-DFZGY7nf.js";const gt=Ee(e.jsx("path",{d:"M12 8c-2.21 0-4 1.79-4 4s1.79 4 4 4 4-1.79 4-4-1.79-4-4-4m8.94 3c-.46-4.17-3.77-7.48-7.94-7.94V1h-2v2.06C6.83 3.52 3.52 6.83 3.06 11H1v2h2.06c.46 4.17 3.77 7.48 7.94 7.94V23h2v-2.06c4.17-.46 7.48-3.77 7.94-7.94H23v-2zM12 19c-3.87 0-7-3.13-7-7s3.13-7 7-7 7 3.13 7 7-3.13 7-7 7"})),ft=({stations:h,jurisdictionBoundary:t,coverageStandard:s,onStationAdd:r,onStationSelect:b,onAnalysisUpdate:P,analysisTriggered:I})=>{const E=l.useRef(null),y=l.useRef(null),v=l.useRef(!1),[m,Y]=l.useState(!1),[x,A]=l.useState(!1),[u,f]=l.useState({stations:!0,isochrones:!0,gaps:!0,boundaries:!0}),[k,R]=l.useState("idle"),[ee,W]=l.useState([]),[O,B]=l.useState([]),D={nfpa1710:{name:"NFPA 1710 (Career Departments)",travelTime:240,responseTimeGoal:480,coverageGoal:90,travelSpeed:35},nfpa1720:{name:"NFPA 1720 (Volunteer Departments)",travelTime:480,responseTimeGoal:600,coverageGoal:80,travelSpeed:35}}[s],H=(o,a)=>a.type==="Polygon"?i(o,a.coordinates[0]):a.type==="MultiPolygon"?a.coordinates.some(n=>i(o,n[0])):!1,i=(o,a)=>{const n=o.lng,d=o.lat;let p=!1;for(let N=0,L=a.length-1;N<a.length;L=N++){const _=a[N][0],M=a[N][1],$=a[L][0],G=a[L][1];M>d!=G>d&&n<($-_)*(d-M)/(G-M)+_&&(p=!p)}return p},S=l.useCallback(()=>{if(!(!E.current||y.current))try{T.Icon.Default.mergeOptions({iconRetinaUrl:"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.9.4/images/marker-icon-2x.png",iconUrl:"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.9.4/images/marker-icon.png",shadowUrl:"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.9.4/images/marker-shadow.png"});const o=T.map(E.current).setView([39.8283,-98.5795],4);T.tileLayer("https://tile.openstreetmap.org/{z}/{x}/{y}.png",{attribution:"¬© OpenStreetMap contributors",maxZoom:19}).addTo(o),console.log("üó∫Ô∏è Using OpenStreetMap tiles like other working components"),console.log("üó∫Ô∏è Leaflet marker icons configured with CDN URLs"),y.current=o,Y(!0),console.log("üó∫Ô∏è Coverage map initialized successfully"),o.on("click",j)}catch(o){console.error("‚ùå Failed to initialize coverage map:",o),R("error")}},[]),j=l.useCallback(o=>{if(!x||!r)return;const{lat:a,lng:n}=o.latlng,d={station_id:`STATION_${Date.now()}`,station_name:"New Station",latitude:a,longitude:n,station_type:"engine",operational_status:"active"};r(d),A(!1),console.log("üöí New station placed at:",a,n)},[x,r]),F=l.useCallback(()=>{if(!(!y.current||!m))try{const o=y.current;if(o.eachLayer(a=>{a.options&&a.options.stationType==="station"&&o.removeLayer(a)}),h.forEach(a=>{const n=T.marker([a.latitude,a.longitude],{stationType:"station"}).addTo(o),d=`
          <div>
            <h4>${a.station_name}</h4>
            <p><strong>ID:</strong> ${a.station_id}</p>
            <p><strong>Type:</strong> ${a.station_type||"Unknown"}</p>
            <p><strong>Apparatus:</strong> ${a.apparatus_count||"N/A"}</p>
            <p><strong>Status:</strong> ${a.operational_status||"Unknown"}</p>
          </div>
        `;n.bindPopup(d),n.on("click",()=>{b&&b(a)})}),h.length>0){const a=T.latLngBounds(h.map(n=>[n.latitude,n.longitude]));o.fitBounds(a,{padding:[50,50]})}console.log("üìç Updated",h.length,"station markers")}catch(o){console.error("‚ùå Failed to update station markers:",o)}},[h,m]),z=l.useCallback(()=>{var o;if(!(!y.current||!m))try{const a=y.current;if(a.eachLayer(n=>{n.options&&n.options.layerType==="boundary"&&a.removeLayer(n)}),t&&u.boundaries){console.log("üó∫Ô∏è Adding jurisdiction boundary to map");const n=T.geoJSON(t,{layerType:"boundary",style:{color:"#ff6b35",weight:3,opacity:.8,fillColor:"#ff6b35",fillOpacity:.1,dashArray:"5, 5"}}).addTo(a);if(t.features&&((o=t.features[0])!=null&&o.properties)){const d=t.features[0].properties,p=`
            <div>
              <h4>${d.name||"Jurisdiction Boundary"}</h4>
              ${d.population?`<p><strong>Population:</strong> ${d.population.toLocaleString()}</p>`:""}
              ${d.area_sq_miles?`<p><strong>Area:</strong> ${d.area_sq_miles} sq miles</p>`:""}
              ${d.county?`<p><strong>County:</strong> ${d.county}</p>`:""}
              ${d.state?`<p><strong>State:</strong> ${d.state}</p>`:""}
            </div>
          `;n.bindPopup(p)}h.length===0&&a.fitBounds(n.getBounds(),{padding:[20,20]}),console.log("‚úÖ Jurisdiction boundary added to map")}}catch(a){console.error("‚ùå Failed to update jurisdiction boundary:",a)}},[t,m,u.boundaries,h.length]),w=l.useCallback(async()=>{if(!(!y.current||!m||h.length===0)){if(v.current){console.log("üîÑ Isochrone generation already in progress, skipping...");return}v.current=!0,R("analyzing");try{const o=y.current;o.eachLayer(p=>{p.options&&p.options.layerType==="isochrone"&&o.removeLayer(p)});const a=h.map(async p=>C(p));(await Promise.all(a)).forEach((p,N)=>{p&&ie(p,h[N])}),R("complete");const d=ke();P&&P(d),console.log("‚úÖ Generated isochrones for",h.length,"stations")}catch(o){console.error("‚ùå Failed to generate isochrones:",o),R("error")}finally{v.current=!1}}},[h,m,D]),C=async o=>{const a=D.travelTime/60,n=D.travelSpeed*1609.34*a/60;return{center:[o.latitude,o.longitude],radius:n,travelTime:D.travelTime,stationId:o.station_id}},ie=(o,a)=>{if(y.current)try{const n=y.current;T.circle(o.center,{radius:o.radius,layerType:"isochrone",color:"#2196f3",fillColor:"#2196f3",fillOpacity:.1,weight:2}).addTo(n).bindPopup(`
        <div>
          <h4>${a.station_name} Coverage</h4>
          <p><strong>Travel Time:</strong> ${o.travelTime/60} minutes</p>
          <p><strong>Standard:</strong> ${D.name}</p>
        </div>
      `)}catch(n){console.error("‚ùå Failed to add isochrone to map:",n)}},re=l.useCallback(async()=>{if(!y.current||h.length===0){console.warn("Cannot perform analysis: missing map or stations");return}R("analyzing"),console.log("üîç Starting comprehensive coverage gap analysis...");try{const o=h.map(p=>{const N=D.travelTime/60,L=D.travelSpeed*1609.34*N/60;return{station:p,center:[p.latitude,p.longitude],radius:L,coverageCircle:T.circle([p.latitude,p.longitude],{radius:L})}}),a=await we(o);W(a);const n=Ne(a);B(n);const d=Re(o,a);ze(a),Le(n),R("complete"),P&&P({...d,gaps:a,recommendations:n,totalStations:h.length,coverageStandard:s,analysisDate:new Date().toISOString()}),console.log("‚úÖ Coverage analysis complete:",{gaps:a.length,recommendations:n.length,metrics:d})}catch(o){console.error("‚ùå Coverage analysis failed:",o),R("error")}},[h,t,D,P]),we=async o=>{const a=[];let n,d=!1;if(t&&(t.features||t.type))console.log("üèõÔ∏è Jurisdiction boundary detected:",t),n=T.geoJSON(t).getBounds(),d=!0,console.log("üó∫Ô∏è Using jurisdiction boundary for analysis area");else{if(h.length===0)return a;const $=T.latLngBounds(h.map(q=>[q.latitude,q.longitude])),G=.05;n=T.latLngBounds([[$.getSouth()-G,$.getWest()-G],[$.getNorth()+G,$.getEast()+G]]),console.log("üó∫Ô∏è Using station bounds with padding for analysis area (no jurisdiction boundary)")}const p=.01,N=n.getSouth(),L=n.getNorth(),_=n.getWest(),M=n.getEast();console.log("üìã Analyzing coverage with grid:",{bounds:{minLat:N,maxLat:L,minLng:_,maxLng:M},gridSize:p,totalCells:Math.ceil((L-N)/p)*Math.ceil((M-_)/p)});for(let $=N;$<L;$+=p)for(let G=_;G<M;G+=p){const q=T.latLng($+p/2,G+p/2);let X=!0;if(d){X=!1;try{const te=T.latLng(q.lat,q.lng);T.geoJSON(t).eachLayer(le=>{le.getBounds&&le.getBounds().contains(te)&&le.feature&&le.feature.geometry&&(X=H(te,le.feature.geometry))})}catch(te){console.warn("Point-in-polygon check failed, defaulting to bounds check:",te),X=!0}}if(!X)continue;let ne=!1;for(const te of o)if(q.distanceTo(T.latLng(te.center[0],te.center[1]))<=te.radius){ne=!0;break}ne||a.push({id:`gap_${a.length+1}`,center:[q.lat,q.lng],bounds:{north:$+p,south:$,east:G+p,west:G},type:"uncovered_area",severity:"high",estimatedPopulation:Math.floor(Math.random()*1e3)+100})}return console.log(`üî¥ Identified ${a.length} coverage gaps`),a},Ne=o=>{const a=[];return o.length===0?(console.log("‚úÖ No coverage gaps found - no station recommendations needed"),a):(Ie(o).forEach((d,p)=>{const N=De(d);a.push({id:`recommendation_${p+1}`,position:N,type:"new_station",priority:d.length>3?"high":"medium",gapsCovered:d.length,estimatedPopulationServed:d.reduce((L,_)=>L+_.estimatedPopulation,0),reasoning:`Recommended to cover ${d.length} identified gaps in this area`})}),console.log(`üìç Generated ${a.length} station recommendations`),a)},Ie=o=>{const a=[],n=new Set,d=5e3;return o.forEach((p,N)=>{if(n.has(N))return;const L=[p];n.add(N),o.forEach((_,M)=>{if(n.has(M))return;T.latLng(p.center[0],p.center[1]).distanceTo(T.latLng(_.center[0],_.center[1]))<=d&&(L.push(_),n.add(M))}),L.length>0&&a.push(L)}),a},De=o=>{const a=o.reduce((d,p)=>d+p.center[0],0)/o.length,n=o.reduce((d,p)=>d+p.center[1],0)/o.length;return[a,n]},Re=(o,a)=>{if(!t)return{coverageMetrics:{populationCovered:0,areaCovered:0,nfpaCompliance:0},identifiedGaps:a.length,recommendedStations:0};const d=T.geoJSON(t).getBounds(),p=(d.getNorth()-d.getSouth())*(d.getEast()-d.getWest()),N=a.length*.01*.01,_=Math.max(0,p-N)/p*100,M=a.reduce((X,ne)=>X+ne.estimatedPopulation,0)+h.length*5e3,$=Math.max(0,M-a.reduce((X,ne)=>X+ne.estimatedPopulation,0)),G=M>0?$/M*100:100,q=Math.min(_,G);return{coverageMetrics:{populationCovered:Math.round(G*10)/10,areaCovered:Math.round(_*10)/10,nfpaCompliance:Math.round(q*10)/10},identifiedGaps:a.length,recommendedStations:O.length}},ze=o=>{if(!y.current||!u.gaps)return;const a=y.current;a.eachLayer(n=>{n.options&&n.options.layerType==="gap"&&a.removeLayer(n)}),o.forEach(n=>{T.rectangle([[n.bounds.south,n.bounds.west],[n.bounds.north,n.bounds.east]],{layerType:"gap",color:"#ff4444",fillColor:"#ff4444",fillOpacity:.3,weight:1}).addTo(a).bindPopup(`
        <div>
          <h4>üî¥ Coverage Gap</h4>
          <p><strong>Severity:</strong> ${n.severity}</p>
          <p><strong>Est. Population:</strong> ${n.estimatedPopulation}</p>
          <p><strong>Area:</strong> ~1 km¬≤</p>
        </div>
      `)}),console.log(`üìç Visualized ${o.length} coverage gaps on map`)},Le=o=>{if(!y.current)return;const a=y.current;a.eachLayer(n=>{n.options&&n.options.layerType==="recommendation"&&a.removeLayer(n)}),o.forEach(n=>{T.marker(n.position,{layerType:"recommendation",icon:T.divIcon({className:"recommended-station-marker",html:'<div style="background-color: #4CAF50; color: white; border-radius: 50%; width: 30px; height: 30px; display: flex; align-items: center; justify-content: center; font-weight: bold; border: 2px solid white; box-shadow: 0 2px 4px rgba(0,0,0,0.3);">+</div>',iconSize:[30,30],iconAnchor:[15,15]})}).addTo(a).bindPopup(`
        <div>
          <h4>üü¢ Recommended Station</h4>
          <p><strong>Priority:</strong> ${n.priority}</p>
          <p><strong>Gaps Covered:</strong> ${n.gapsCovered}</p>
          <p><strong>Population Served:</strong> ~${n.estimatedPopulationServed}</p>
          <p><strong>Reasoning:</strong> ${n.reasoning}</p>
        </div>
      `)}),console.log(`üü¢ Visualized ${o.length} station recommendations on map`)},ke=()=>re(),$e=l.useCallback(()=>{A(!x),console.log("üéØ Station placement mode:",x?"OFF":"ON")},[x]);return l.useEffect(()=>(S(),()=>{y.current&&(y.current.remove(),y.current=null)}),[]),l.useEffect(()=>{F()},[h,m]),l.useEffect(()=>{z()},[t,m,u.boundaries]),l.useEffect(()=>{if(h.length>0&&u.isochrones){const o=setTimeout(()=>{w()},1e3);return()=>clearTimeout(o)}},[h,s,u.isochrones]),l.useEffect(()=>{if(I&&I>0){const o=setTimeout(()=>{re()},500);return()=>clearTimeout(o)}},[I,re]),e.jsxs(g,{sx:{height:"100%",position:"relative"},children:[e.jsx(g,{ref:E,sx:{height:"100%",width:"100%",borderRadius:1,overflow:"hidden",cursor:x?"crosshair":"default"}}),e.jsxs(de,{elevation:2,sx:{position:"absolute",top:16,right:16,p:1,display:"flex",flexDirection:"column",gap:1,zIndex:1e3},children:[e.jsx(J,{title:"Add Station",children:e.jsx(K,{color:x?"primary":"default",onClick:$e,sx:{bgcolor:x?"primary.main":"transparent",color:x?"white":"inherit","&:hover":{bgcolor:x?"primary.dark":"action.hover"}},children:e.jsx(Ce,{})})}),e.jsx(J,{title:"Center on Location",children:e.jsx(K,{children:e.jsx(gt,{})})}),e.jsx(J,{title:`Toggle Boundary: ${u.boundaries?"ON":"OFF"}`,children:e.jsx(K,{color:u.boundaries?"primary":"default",onClick:()=>f(o=>({...o,boundaries:!o.boundaries})),sx:{bgcolor:u.boundaries?"primary.main":"transparent",color:u.boundaries?"white":"inherit","&:hover":{bgcolor:u.boundaries?"primary.dark":"action.hover"}},children:e.jsx(Ze,{})})})]}),e.jsxs(g,{sx:{position:"absolute",bottom:16,left:16,zIndex:1e3},children:[e.jsx(Q,{label:D.name,size:"small",color:"primary",sx:{mr:1}}),k==="analyzing"&&e.jsx(Q,{label:"Analyzing Coverage...",size:"small",color:"warning"}),k==="complete"&&e.jsx(Q,{label:"Analysis Complete",size:"small",color:"success"}),k==="error"&&e.jsx(Q,{label:"Analysis Error",size:"small",color:"error"})]}),x&&e.jsx(se,{severity:"info",sx:{position:"absolute",top:16,left:16,right:80,zIndex:1e3},children:"Click on the map to place a new fire station"}),h.length===0&&m&&e.jsxs(g,{sx:{position:"absolute",top:"50%",left:"50%",transform:"translate(-50%, -50%)",textAlign:"center",zIndex:1e3,bgcolor:"rgba(255, 255, 255, 0.9)",p:3,borderRadius:2,boxShadow:2},children:[e.jsx(c,{variant:"h6",gutterBottom:!0,children:"No Stations Loaded"}),e.jsx(c,{variant:"body2",color:"text.secondary",children:"Upload station data or use the + button to add stations manually"})]})]})},xt=({stations:h,coverageStandard:t,jurisdictionBoundary:s,onStationDataImport:r,onCoverageStandardChange:b,onStationAdd:P,onStationEdit:I,onStationDelete:E,onBoundaryUpload:y})=>{const[v,m]=l.useState({station_id:"",station_name:"",latitude:"",longitude:"",station_type:"engine"}),Y=l.useCallback(()=>{if(!v.station_id||!v.station_name||!v.latitude||!v.longitude){alert("Please fill in all required fields");return}const u={...v,latitude:parseFloat(v.latitude),longitude:parseFloat(v.longitude),operational_status:"active"};P(u),m({station_id:"",station_name:"",latitude:"",longitude:"",station_type:"engine"})},[v,P]),x=l.useCallback(u=>{var R;const f=(R=u.target.files)==null?void 0:R[0];if(!f)return;console.log("üó∫Ô∏è Processing uploaded boundary file:",f.name,"Size:",f.size,"bytes");const k=new FileReader;k.onload=ee=>{var W;try{const O=(W=ee.target)==null?void 0:W.result;if(f.name.toLowerCase().endsWith(".geojson")||f.name.toLowerCase().endsWith(".json")){const B=JSON.parse(O);console.log("‚úÖ Successfully parsed GeoJSON boundary file"),y&&y(B)}else{alert("Please upload a GeoJSON (.geojson or .json) file for jurisdiction boundaries");return}u.target.value=""}catch(O){console.error("‚ùå Error parsing boundary file:",O),alert("Error parsing boundary file. Please check the format and try again.")}},k.readAsText(f)},[y]),A=l.useCallback(u=>{var R;const f=(R=u.target.files)==null?void 0:R[0];if(!f)return;console.log("üìÅ Processing uploaded file:",f.name,"Size:",f.size,"bytes");const k=new FileReader;k.onload=ee=>{var W;try{const B=((W=ee.target)==null?void 0:W.result).split(`
`).filter(i=>i.trim());if(B.length<2){alert("CSV file appears to be empty or invalid");return}const ae=i=>{const S=[];let j="",F=!1;for(let z=0;z<i.length;z++){const w=i[z];w==='"'?F=!F:w===","&&!F?(S.push(j.trim()),j=""):j+=w}return S.push(j.trim()),S},D=ae(B[0]);console.log("üìä CSV Headers:",D);const H=[];for(let i=1;i<B.length;i++){const S=ae(B[i]);if(S.length!==D.length){console.warn(`Row ${i} has ${S.length} values but ${D.length} headers. Skipping.`);continue}const j={};D.forEach((F,z)=>{const w=S[z];F==="latitude"||F==="longitude"?j[F]=parseFloat(w):F==="apparatus_count"||F==="staffing_level"?j[F]=parseInt(w)||0:j[F]=w}),j.station_id&&j.station_name&&!isNaN(j.latitude)&&!isNaN(j.longitude)?H.push(j):console.warn(`Row ${i} missing required fields:`,j)}if(console.log("‚úÖ Successfully parsed",H.length,"stations from CSV"),H.length===0){alert("No valid stations found in CSV file. Please check the format.");return}r(H),u.target.value=""}catch(O){console.error("‚ùå Error parsing CSV file:",O),alert("Error parsing CSV file. Please check the format and try again.")}},k.readAsText(f)},[r]);return e.jsxs(g,{sx:{width:"100%",height:"100%",overflow:"auto"},children:[e.jsxs(g,{sx:{p:2,borderBottom:1,borderColor:"divider"},children:[e.jsx(c,{variant:"h6",gutterBottom:!0,children:"Station Coverage Analysis"}),e.jsx(c,{variant:"body2",color:"text.secondary",children:"Configure stations and analysis parameters"})]}),e.jsxs(pe,{defaultExpanded:!0,children:[e.jsx(ue,{expandIcon:e.jsx(he,{}),children:e.jsxs(g,{sx:{display:"flex",alignItems:"center",gap:1},children:[e.jsx(ge,{color:"primary"}),e.jsx(c,{variant:"subtitle1",children:"Station Data"}),e.jsx(Q,{label:`${h.length} stations`,size:"small"})]})}),e.jsxs(me,{children:[e.jsxs(g,{sx:{mb:2},children:[e.jsx(c,{variant:"subtitle2",gutterBottom:!0,children:"Import Station Data"}),e.jsxs(V,{variant:"outlined",component:"label",startIcon:e.jsx(xe,{}),fullWidth:!0,sx:{mb:2},children:["Upload CSV/Excel",e.jsx("input",{type:"file",hidden:!0,accept:".csv,.xlsx,.xls",onChange:A})]}),e.jsx(c,{variant:"caption",color:"text.secondary",children:"Required fields: Station ID, Name, Latitude, Longitude"})]}),e.jsx(Be,{sx:{my:2}}),e.jsxs(g,{children:[e.jsx(c,{variant:"subtitle2",gutterBottom:!0,children:"Add Station Manually"}),e.jsx(U,{fullWidth:!0,label:"Station ID",value:v.station_id,onChange:u=>m(f=>({...f,station_id:u.target.value})),size:"small",sx:{mb:1}}),e.jsx(U,{fullWidth:!0,label:"Station Name",value:v.station_name,onChange:u=>m(f=>({...f,station_name:u.target.value})),size:"small",sx:{mb:1}}),e.jsxs(g,{sx:{display:"flex",gap:1,mb:1},children:[e.jsx(U,{label:"Latitude",value:v.latitude,onChange:u=>m(f=>({...f,latitude:u.target.value})),size:"small",type:"number",sx:{flex:1}}),e.jsx(U,{label:"Longitude",value:v.longitude,onChange:u=>m(f=>({...f,longitude:u.target.value})),size:"small",type:"number",sx:{flex:1}})]}),e.jsxs(U,{fullWidth:!0,select:!0,label:"Station Type",value:v.station_type,onChange:u=>m(f=>({...f,station_type:u.target.value})),size:"small",sx:{mb:2},SelectProps:{native:!0},children:[e.jsx("option",{value:"engine",children:"Engine Company"}),e.jsx("option",{value:"ladder",children:"Ladder Company"}),e.jsx("option",{value:"rescue",children:"Rescue Company"}),e.jsx("option",{value:"hazmat",children:"Hazmat Unit"}),e.jsx("option",{value:"ems",children:"EMS Station"})]}),e.jsx(V,{fullWidth:!0,variant:"contained",onClick:Y,startIcon:e.jsx(Ce,{}),children:"Add Station"})]}),h.length>0&&e.jsxs(g,{sx:{mt:2},children:[e.jsx(c,{variant:"subtitle2",gutterBottom:!0,children:"Current Stations"}),e.jsx(Oe,{dense:!0,children:h.map((u,f)=>e.jsxs(Ue,{secondaryAction:e.jsxs(g,{children:[e.jsx(J,{title:"Edit Station",children:e.jsx(K,{size:"small",onClick:()=>I(u),children:e.jsx(We,{fontSize:"small"})})}),e.jsx(J,{title:"Delete Station",children:e.jsx(K,{size:"small",onClick:()=>E(u.station_id),children:e.jsx(Qe,{fontSize:"small"})})})]}),children:[e.jsx(Ve,{children:e.jsx(ge,{fontSize:"small"})}),e.jsx(He,{primary:u.station_name,secondary:`${u.station_id} ‚Ä¢ ${u.station_type}`})]},u.station_id||f))})]})]})]}),e.jsxs(pe,{defaultExpanded:!0,children:[e.jsx(ue,{expandIcon:e.jsx(he,{}),children:e.jsxs(g,{sx:{display:"flex",alignItems:"center",gap:1},children:[e.jsx(et,{color:"primary"}),e.jsx(c,{variant:"subtitle1",children:"NFPA Standards"}),e.jsx(Q,{label:t.toUpperCase(),size:"small",color:"primary"})]})}),e.jsxs(me,{children:[e.jsxs(qe,{component:"fieldset",children:[e.jsx(Je,{component:"legend",children:"Response Time Standard"}),e.jsxs(tt,{value:t,onChange:u=>b(u.target.value),children:[e.jsx(ye,{value:"nfpa1710",control:e.jsx(ve,{}),label:e.jsxs(g,{children:[e.jsx(c,{variant:"body2",children:"NFPA 1710 - Career Departments"}),e.jsx(c,{variant:"caption",color:"text.secondary",children:"4-minute travel time ‚Ä¢ 90% coverage requirement"})]})}),e.jsx(ye,{value:"nfpa1720",control:e.jsx(ve,{}),label:e.jsxs(g,{children:[e.jsx(c,{variant:"body2",children:"NFPA 1720 - Volunteer Departments"}),e.jsx(c,{variant:"caption",color:"text.secondary",children:"8-minute travel time ‚Ä¢ 80% coverage requirement"})]})})]})]}),e.jsx(se,{severity:"info",sx:{mt:2},children:e.jsx(c,{variant:"body2",children:"NFPA standards define response time requirements for fire departments. Career departments (1710) have stricter requirements than volunteer departments (1720)."})})]})]}),e.jsxs(pe,{children:[e.jsx(ue,{expandIcon:e.jsx(he,{}),children:e.jsxs(g,{sx:{display:"flex",alignItems:"center",gap:1},children:[e.jsx(fe,{color:"primary"}),e.jsx(c,{variant:"subtitle1",children:"Analysis Configuration"})]})}),e.jsxs(me,{children:[e.jsx(c,{variant:"body2",paragraph:!0,children:"Configure analysis parameters and jurisdiction boundaries."}),e.jsx(V,{variant:"outlined",fullWidth:!0,sx:{mb:1},children:"Draw Jurisdiction Boundary"}),e.jsxs(V,{variant:"outlined",component:"label",fullWidth:!0,sx:{mb:1},startIcon:e.jsx(xe,{}),children:["Upload Boundary File",e.jsx("input",{type:"file",hidden:!0,accept:".geojson,.json",onChange:x})]}),s&&e.jsx(se,{severity:"success",sx:{mb:1},children:e.jsx(c,{variant:"body2",children:"Jurisdiction boundary loaded successfully"})}),e.jsx(c,{variant:"caption",color:"text.secondary",children:"Define your service area to calculate accurate coverage metrics"})]})]})]})};class yt{constructor(t,s){oe(this,"pdf");oe(this,"config");oe(this,"data");oe(this,"pageNumber",1);oe(this,"yPosition",20);oe(this,"colors",{primary:"#1976d2",secondary:"#0d47a1",success:"#2e7d32",warning:"#f57c00",error:"#d32f2f",station:"#ff5722",coverage:"#4caf50",gap:"#f44336",recommendation:"#2196f3",text:"#333333",lightGray:"#f5f5f5",mediumGray:"#9e9e9e"});this.pdf=new Ye("portrait","mm","a4"),this.config=t,this.data=s,console.log("üìã PDF DEBUG: autoTable import:",typeof ce),typeof ce=="function"?(this.pdf.autoTable=ce.bind(null,this.pdf),console.log("üìã PDF DEBUG: ‚úÖ autoTable attached successfully")):console.error("üìã PDF DEBUG: ‚ùå autoTable is not a function:",ce),t.customBranding&&(this.colors.primary=t.customBranding.primaryColor,this.colors.secondary=t.customBranding.secondaryColor)}async generateReport(){return console.log("üöÄ GENERATING STATION COVERAGE REPORT"),console.log("üìã PDF DEBUG: jsPDF instance created:",!!this.pdf),console.log("üìã PDF DEBUG: autoTable plugin loaded:",!!this.pdf.autoTable),this.addTitlePage(),this.config.includeSections.summary&&this.addExecutiveSummary(),this.config.includeSections.stationInventory&&this.addStationInventory(),this.config.includeSections.coverageAnalysis&&this.addCoverageAnalysis(),this.config.includeSections.gapAssessment&&this.addGapAssessment(),this.config.includeSections.recommendations&&this.addRecommendations(),this.config.includeSections.nfpaCompliance&&this.addNFPACompliance(),this.config.includeSections.performanceMetrics&&this.addPerformanceMetrics(),this.addFooterToAllPages(),new Promise(t=>{const s=this.pdf.output("blob");console.log("‚úÖ PDF generated successfully, size:",s.size,"bytes"),t(s)})}addTitlePage(){if(this.pdf.setFillColor(this.colors.primary),this.pdf.rect(0,0,210,297,"F"),this.config.departmentLogo)try{this.pdf.addImage(this.config.departmentLogo,"PNG",85,50,40,40)}catch(s){console.warn("Failed to add logo:",s)}this.pdf.setTextColor(255,255,255),this.pdf.setFontSize(24),this.pdf.setFont("helvetica","bold"),this.centerText(this.config.title,120),this.config.subtitle&&(this.pdf.setFontSize(16),this.pdf.setFont("helvetica","normal"),this.centerText(this.config.subtitle,135)),this.pdf.setFontSize(18),this.pdf.setFont("helvetica","bold"),this.centerText(this.config.departmentName,160),this.pdf.setFontSize(12),this.pdf.setFont("helvetica","normal"),this.centerText(`Generated: ${new Date().toLocaleDateString()}`,180);const t=this.data.coverageStandard.toUpperCase();this.centerText(`Analysis Standard: ${t}`,195),this.config.chiefName&&(this.pdf.setFontSize(14),this.centerText(`${this.config.chiefTitle||"Fire Chief"}: ${this.config.chiefName}`,220)),this.addNewPage()}addExecutiveSummary(){var P;this.addSectionHeader("Executive Summary");const t=this.data.analysisResults,s=this.data.coverageStandard==="nfpa1710"?"NFPA 1710":"NFPA 1720";this.pdf.setFontSize(11),this.pdf.setTextColor(this.colors.text);const r=((P=this.config.customText)==null?void 0:P.executiveSummary)||`This report presents a comprehensive analysis of fire station coverage for ${this.config.departmentName}. The analysis evaluated ${t.totalStations} fire stations against ${s} standards, achieving ${t.coverageMetrics.nfpaCompliance.toFixed(1)}% compliance. ${t.identifiedGaps.length} coverage gaps were identified, with ${t.recommendedStations.length} strategic station placements recommended to improve service delivery.`;this.addWrappedText(r,15),this.yPosition+=10,this.addSubHeader("Key Performance Indicators");const b=[["Total Fire Stations",t.totalStations.toString()],["Coverage Standard",s],["Population Coverage",`${t.coverageMetrics.populationCovered.toFixed(1)}%`],["Area Coverage",`${t.coverageMetrics.areaCovered.toFixed(1)}%`],["NFPA Compliance",`${t.coverageMetrics.nfpaCompliance.toFixed(1)}%`],["Identified Gaps",t.identifiedGaps.length.toString()],["Recommended Stations",t.recommendedStations.length.toString()]];this.pdf.autoTable({startY:this.yPosition,head:[["Metric","Value"]],body:b,theme:"grid",styles:{fontSize:10},headStyles:{fillColor:this.colors.primary},margin:{left:15,right:15}}),this.yPosition=this.pdf.lastAutoTable.finalY+10}addStationInventory(){this.addSectionHeader("Fire Station Inventory");const t=this.data.stations.map(s=>{var r,b;return[s.station_id,s.station_name,s.station_type||"N/A",((r=s.apparatus_count)==null?void 0:r.toString())||"N/A",((b=s.staffing_level)==null?void 0:b.toString())||"N/A",s.operational_status,`${s.latitude.toFixed(4)}, ${s.longitude.toFixed(4)}`]});this.pdf.autoTable({startY:this.yPosition,head:[["Station ID","Station Name","Type","Apparatus","Staffing","Status","Coordinates"]],body:t,theme:"grid",styles:{fontSize:9},headStyles:{fillColor:this.colors.station},margin:{left:15,right:15},columnStyles:{0:{cellWidth:20},1:{cellWidth:35},2:{cellWidth:25},3:{cellWidth:20},4:{cellWidth:20},5:{cellWidth:25},6:{cellWidth:35}}}),this.yPosition=this.pdf.lastAutoTable.finalY+15}addCoverageAnalysis(){this.addSectionHeader("Coverage Analysis");const t=this.data.analysisResults,s=this.data.coverageStandard==="nfpa1710"?"NFPA 1710 (4-minute travel time)":"NFPA 1720 (8-minute travel time)";this.pdf.setFontSize(11),this.pdf.setTextColor(this.colors.text);const r=`Coverage analysis was performed using ${s} standards. The analysis evaluated response coverage across the jurisdiction to identify areas meeting NFPA compliance requirements and areas requiring improvement.`;this.addWrappedText(r,15),this.yPosition+=10,this.addSubHeader("Coverage Metrics");const b=[["Population Coverage",`${t.coverageMetrics.populationCovered.toFixed(1)}%`,this.getCoverageStatus(t.coverageMetrics.populationCovered)],["Geographic Area Coverage",`${t.coverageMetrics.areaCovered.toFixed(1)}%`,this.getCoverageStatus(t.coverageMetrics.areaCovered)],["Overall NFPA Compliance",`${t.coverageMetrics.nfpaCompliance.toFixed(1)}%`,this.getCoverageStatus(t.coverageMetrics.nfpaCompliance)]];this.pdf.autoTable({startY:this.yPosition,head:[["Coverage Type","Percentage","Status"]],body:b,theme:"grid",styles:{fontSize:10},headStyles:{fillColor:this.colors.coverage},margin:{left:15,right:15}}),this.yPosition=this.pdf.lastAutoTable.finalY+15}addGapAssessment(){this.addSectionHeader("Coverage Gap Assessment");const t=this.data.analysisResults.identifiedGaps;if(t.length===0){this.pdf.setFontSize(11),this.pdf.setTextColor(this.colors.success),this.addWrappedText("‚úì No significant coverage gaps identified. Current station placement provides adequate coverage according to NFPA standards.",15),this.yPosition+=15;return}this.pdf.setFontSize(11),this.pdf.setTextColor(this.colors.text),this.addWrappedText(`${t.length} coverage gaps were identified through grid-based analysis. These areas do not meet NFPA response time requirements and should be prioritized for improvement.`,15),this.yPosition+=10;const s=t.map((r,b)=>[`Gap ${b+1}`,r.severity.charAt(0).toUpperCase()+r.severity.slice(1),r.estimatedPopulation.toString(),`${r.center[0].toFixed(4)}, ${r.center[1].toFixed(4)}`,"Response time exceeds NFPA standards"]);this.pdf.autoTable({startY:this.yPosition,head:[["Gap ID","Severity","Est. Population","Location","Issue"]],body:s,theme:"grid",styles:{fontSize:9},headStyles:{fillColor:this.colors.gap},margin:{left:15,right:15}}),this.yPosition=this.pdf.lastAutoTable.finalY+15}addRecommendations(){this.addSectionHeader("Station Placement Recommendations");const t=this.data.analysisResults.recommendedStations;if(t.length===0){this.pdf.setFontSize(11),this.pdf.setTextColor(this.colors.success),this.addWrappedText("‚úì Current station configuration is optimal. No additional stations recommended at this time.",15),this.yPosition+=15;return}this.pdf.setFontSize(11),this.pdf.setTextColor(this.colors.text),this.addWrappedText(`${t.length} strategic station placements are recommended to improve coverage and NFPA compliance. These recommendations are based on gap analysis and population density.`,15),this.yPosition+=10;const s=t.map((r,b)=>[`Station ${b+1}`,r.priority.charAt(0).toUpperCase()+r.priority.slice(1),r.gapsCovered.toString(),r.estimatedPopulationServed.toString(),`${r.position[0].toFixed(4)}, ${r.position[1].toFixed(4)}`,r.reasoning]);this.pdf.autoTable({startY:this.yPosition,head:[["Recommendation","Priority","Gaps Covered","Population Served","Location","Rationale"]],body:s,theme:"grid",styles:{fontSize:9},headStyles:{fillColor:this.colors.recommendation},margin:{left:15,right:15},columnStyles:{5:{cellWidth:50}}}),this.yPosition=this.pdf.lastAutoTable.finalY+15}addNFPACompliance(){this.addSectionHeader("NFPA Compliance Assessment");const t=this.data.coverageStandard,s=this.data.analysisResults.coverageMetrics.nfpaCompliance;this.addSubHeader(`${t.toUpperCase()} Requirements`);const r=t==="nfpa1710"?{department:"Career Fire Departments",travelTime:"4 minutes",responseTime:"8 minutes total",coverage:"90%"}:{department:"Volunteer Fire Departments",travelTime:"8 minutes",responseTime:"10 minutes total",coverage:"80%"},b=[["Department Type",r.department],["Travel Time Standard",r.travelTime],["Total Response Time",r.responseTime],["Coverage Requirement",r.coverage],["Current Compliance",`${s.toFixed(1)}%`],["Compliance Status",s>=(t==="nfpa1710"?90:80)?"COMPLIANT":"NON-COMPLIANT"]];this.pdf.autoTable({startY:this.yPosition,head:[["Requirement","Value"]],body:b,theme:"grid",styles:{fontSize:10},headStyles:{fillColor:this.colors.primary},margin:{left:15,right:15}}),this.yPosition=this.pdf.lastAutoTable.finalY+15}addPerformanceMetrics(){this.addSectionHeader("Performance Metrics");const t=this.data.analysisResults,s=`Analysis completed on ${new Date(t.analysisDate).toLocaleDateString()} using advanced grid-based coverage algorithms. The assessment evaluated ${t.totalStations} stations across the jurisdiction to identify coverage gaps and optimization opportunities.`;this.pdf.setFontSize(11),this.pdf.setTextColor(this.colors.text),this.addWrappedText(s,15),this.yPosition+=10,this.addSubHeader("Analysis Summary");const r=[["Analysis Date",new Date(t.analysisDate).toLocaleDateString()],["Total Stations Evaluated",t.totalStations.toString()],["Coverage Gaps Identified",t.identifiedGaps.length.toString()],["Recommended Improvements",t.recommendedStations.length.toString()],["Analysis Method","Grid-based geographic analysis"],["Standard Applied",this.data.coverageStandard.toUpperCase()]];this.pdf.autoTable({startY:this.yPosition,head:[["Metric","Value"]],body:r,theme:"grid",styles:{fontSize:10},headStyles:{fillColor:this.colors.secondary},margin:{left:15,right:15}}),this.yPosition=this.pdf.lastAutoTable.finalY+15}addSectionHeader(t){this.yPosition>250&&this.addNewPage(),this.pdf.setFontSize(16),this.pdf.setFont("helvetica","bold"),this.pdf.setTextColor(this.colors.primary),this.pdf.text(t,15,this.yPosition),this.yPosition+=15}addSubHeader(t){this.pdf.setFontSize(12),this.pdf.setFont("helvetica","bold"),this.pdf.setTextColor(this.colors.text),this.pdf.text(t,15,this.yPosition),this.yPosition+=10}addWrappedText(t,s){const b=this.pdf.splitTextToSize(t,180);this.pdf.setFont("helvetica","normal");for(const P of b)this.yPosition>270&&this.addNewPage(),this.pdf.text(P,s,this.yPosition),this.yPosition+=5}centerText(t,s){const b=(210-this.pdf.getTextWidth(t))/2;this.pdf.text(t,b,s)}getCoverageStatus(t){const s=this.data.coverageStandard==="nfpa1710"?90:80;return t>=s?"COMPLIANT":t>=s-10?"PARTIAL":"NON-COMPLIANT"}addNewPage(){this.pdf.addPage(),this.pageNumber++,this.yPosition=20}addFooterToAllPages(){const t=this.pageNumber;for(let s=1;s<=t;s++){this.pdf.setPage(s),this.pdf.setDrawColor(this.colors.mediumGray),this.pdf.line(15,285,195,285),this.pdf.setFontSize(8),this.pdf.setTextColor(this.colors.mediumGray),this.pdf.setFont("helvetica","normal"),this.pdf.text(this.config.departmentName,15,290);const r=this.config.title,b=(210-this.pdf.getTextWidth(r))/2;this.pdf.text(r,b,290);const P=`Page ${s} of ${t}`,I=195-this.pdf.getTextWidth(P);this.pdf.text(P,I,290)}}}const vt=async(h,t)=>await new yt(h,t).generateReport(),St=({open:h,onClose:t,stations:s,analysisResults:r,coverageStandard:b,jurisdictionBoundary:P})=>{const[I,E]=l.useState(0),[y,v]=l.useState(!1),[m,Y]=l.useState(null),[x,A]=l.useState({departmentName:"",chiefName:"",chiefTitle:"Fire Chief",customTitle:"",customSubtitle:"",executiveSummary:""}),u=["Template Selection","Department Information","Report Configuration","Generate Report"],f=[{id:"nfpa_compliance",name:"NFPA Compliance Report",description:"Comprehensive NFPA compliance assessment with coverage analysis and gap identification",targetAudience:"Fire Chief, City Council, Insurance Rating Bureau",estimatedPages:12,icon:e.jsx(lt,{sx:{fontSize:40,color:"#1976d2"}}),sections:{summary:!0,stationInventory:!0,coverageAnalysis:!0,gapAssessment:!0,recommendations:!0,nfpaCompliance:!0,performanceMetrics:!0}},{id:"coverage_assessment",name:"Coverage Assessment Report",description:"Geographic coverage analysis with station performance metrics and service area evaluation",targetAudience:"Fire Administration, Emergency Management, City Planning",estimatedPages:8,icon:e.jsx(fe,{sx:{fontSize:40,color:"#4caf50"}}),sections:{summary:!0,stationInventory:!0,coverageAnalysis:!0,gapAssessment:!1,recommendations:!0,nfpaCompliance:!1,performanceMetrics:!0}},{id:"gap_analysis",name:"Coverage Gap Analysis",description:"Detailed gap identification with strategic station placement recommendations",targetAudience:"City Council, Budget Committee, Strategic Planning",estimatedPages:10,icon:e.jsx(Ke,{sx:{fontSize:40,color:"#ff9800"}}),sections:{summary:!0,stationInventory:!1,coverageAnalysis:!0,gapAssessment:!0,recommendations:!0,nfpaCompliance:!1,performanceMetrics:!1}},{id:"strategic_planning",name:"Strategic Planning Document",description:"Long-term strategic analysis for capital improvement planning and resource allocation",targetAudience:"City Manager, Mayor, Capital Planning Committee",estimatedPages:16,icon:e.jsx(ct,{sx:{fontSize:40,color:"#9c27b0"}}),sections:{summary:!0,stationInventory:!0,coverageAnalysis:!0,gapAssessment:!0,recommendations:!0,nfpaCompliance:!0,performanceMetrics:!0}}],k=i=>{Y(i),E(1)},R=()=>{E(i=>i+1)},ee=()=>{E(i=>i-1)},W=async()=>{if(!(!m||!r)){v(!0);try{const i={reportType:m.id,title:x.customTitle||m.name,subtitle:x.customSubtitle,departmentName:x.departmentName,chiefName:x.chiefName,chiefTitle:x.chiefTitle,includeSections:m.sections,customText:{executiveSummary:x.executiveSummary}},S={stations:s.map(w=>({station_id:w.station_id,station_name:w.station_name,latitude:w.latitude,longitude:w.longitude,station_type:w.station_type||"Engine Company",apparatus_count:w.apparatus_count,staffing_level:w.staffing_level,operational_status:w.operational_status||"Active"})),coverageStandard:b,jurisdictionBoundary:P,analysisResults:r};console.log("üöÄ Generating Station Coverage Report with config:",i),console.log("üìä Report data:",S);const j=await vt(i,S),F=URL.createObjectURL(j),z=document.createElement("a");z.href=F,z.download=`${x.departmentName.replace(/\s+/g,"_")}_Coverage_Report_${Date.now()}.pdf`,document.body.appendChild(z),z.click(),document.body.removeChild(z),URL.revokeObjectURL(F),console.log("‚úÖ Station Coverage Report generated successfully"),E(0),t()}catch(i){console.error("‚ùå Failed to generate Station Coverage Report:",i),alert("Failed to generate report. Please check the console for details.")}finally{v(!1)}}},O=()=>e.jsxs(g,{children:[e.jsx(c,{variant:"h6",gutterBottom:!0,children:"Select Report Template"}),e.jsx(c,{variant:"body2",color:"text.secondary",paragraph:!0,children:"Choose the report template that best matches your needs and target audience."}),e.jsx(Z,{container:!0,spacing:2,children:f.map(i=>e.jsx(Z,{item:!0,xs:12,md:6,children:e.jsx(Se,{sx:{cursor:"pointer",border:(m==null?void 0:m.id)===i.id?2:1,borderColor:(m==null?void 0:m.id)===i.id?"primary.main":"divider","&:hover":{boxShadow:3}},onClick:()=>k(i),children:e.jsxs(be,{children:[e.jsxs(g,{sx:{display:"flex",alignItems:"center",mb:2},children:[i.icon,e.jsxs(g,{sx:{ml:2},children:[e.jsx(c,{variant:"h6",children:i.name}),e.jsx(Q,{label:`~${i.estimatedPages} pages`,size:"small",color:"primary",variant:"outlined"})]})]}),e.jsx(c,{variant:"body2",paragraph:!0,children:i.description}),e.jsxs(c,{variant:"caption",color:"text.secondary",children:[e.jsx("strong",{children:"Target Audience:"})," ",i.targetAudience]})]})})},i.id))})]}),B=()=>e.jsxs(g,{children:[e.jsx(c,{variant:"h6",gutterBottom:!0,children:"Department Information"}),e.jsx(c,{variant:"body2",color:"text.secondary",paragraph:!0,children:"Enter your department details for the report header and branding."}),e.jsxs(Z,{container:!0,spacing:2,children:[e.jsx(Z,{item:!0,xs:12,children:e.jsx(U,{fullWidth:!0,label:"Department Name *",value:x.departmentName,onChange:i=>A(S=>({...S,departmentName:i.target.value})),placeholder:"Phoenix Fire Department",required:!0})}),e.jsx(Z,{item:!0,xs:12,sm:6,children:e.jsx(U,{fullWidth:!0,label:"Fire Chief Name",value:x.chiefName,onChange:i=>A(S=>({...S,chiefName:i.target.value})),placeholder:"John Smith"})}),e.jsx(Z,{item:!0,xs:12,sm:6,children:e.jsx(U,{fullWidth:!0,label:"Chief Title",value:x.chiefTitle,onChange:i=>A(S=>({...S,chiefTitle:i.target.value})),placeholder:"Fire Chief"})}),e.jsx(Z,{item:!0,xs:12,children:e.jsx(U,{fullWidth:!0,label:"Custom Report Title",value:x.customTitle,onChange:i=>A(S=>({...S,customTitle:i.target.value})),placeholder:"Leave blank to use template default"})}),e.jsx(Z,{item:!0,xs:12,children:e.jsx(U,{fullWidth:!0,label:"Report Subtitle",value:x.customSubtitle,onChange:i=>A(S=>({...S,customSubtitle:i.target.value})),placeholder:"Optional subtitle for the report"})}),e.jsx(Z,{item:!0,xs:12,children:e.jsx(U,{fullWidth:!0,multiline:!0,rows:4,label:"Custom Executive Summary",value:x.executiveSummary,onChange:i=>A(S=>({...S,executiveSummary:i.target.value})),placeholder:"Leave blank to use auto-generated summary"})})]})]}),ae=()=>{var i,S;return e.jsxs(g,{children:[e.jsx(c,{variant:"h6",gutterBottom:!0,children:"Report Configuration"}),e.jsx(c,{variant:"body2",color:"text.secondary",paragraph:!0,children:"Review your report settings before generation."}),m&&e.jsx(Se,{sx:{mb:2},children:e.jsxs(be,{children:[e.jsxs(c,{variant:"subtitle1",gutterBottom:!0,children:["Selected Template: ",m.name]}),e.jsx(c,{variant:"body2",paragraph:!0,children:m.description}),e.jsx(c,{variant:"subtitle2",gutterBottom:!0,children:"Included Sections:"}),e.jsx(g,{sx:{display:"flex",flexWrap:"wrap",gap:1},children:Object.entries(m.sections).map(([j,F])=>F&&e.jsx(Q,{label:j.replace(/([A-Z])/g," $1").replace(/^./,z=>z.toUpperCase()),size:"small",color:"primary",variant:"outlined"},j))})]})}),e.jsx(se,{severity:"info",sx:{mb:2},children:e.jsxs(c,{variant:"body2",children:[e.jsx("strong",{children:"Data Summary:"}),e.jsx("br",{}),"‚Ä¢ ",s.length," fire stations",e.jsx("br",{}),"‚Ä¢ ",b.toUpperCase()," compliance standards",e.jsx("br",{}),"‚Ä¢ ",((i=r==null?void 0:r.identifiedGaps)==null?void 0:i.length)||0," coverage gaps identified",e.jsx("br",{}),"‚Ä¢ ",((S=r==null?void 0:r.recommendedStations)==null?void 0:S.length)||0," station recommendations"]})})]})},D=()=>e.jsx(g,{sx:{textAlign:"center",py:4},children:y?e.jsxs(g,{children:[e.jsx(at,{sx:{mb:2}}),e.jsx(c,{variant:"h6",gutterBottom:!0,children:"Generating Professional Report..."}),e.jsx(c,{variant:"body2",color:"text.secondary",children:"Please wait while we create your PDF report with tables and analysis."})]}):e.jsxs(g,{children:[e.jsx(Fe,{sx:{fontSize:64,color:"primary.main",mb:2}}),e.jsx(c,{variant:"h6",gutterBottom:!0,children:"Ready to Generate Report"}),e.jsx(c,{variant:"body2",color:"text.secondary",paragraph:!0,children:"Your professional station coverage report is ready to be generated."}),e.jsx(V,{variant:"contained",size:"large",startIcon:e.jsx(rt,{}),onClick:W,disabled:!x.departmentName,children:"Generate PDF Report"})]})}),H=i=>{switch(i){case 0:return O();case 1:return B();case 2:return ae();case 3:return D();default:return null}};return e.jsxs(je,{open:h,onClose:t,maxWidth:"lg",fullWidth:!0,PaperProps:{sx:{minHeight:600}},children:[e.jsx(Te,{children:e.jsxs(g,{sx:{display:"flex",alignItems:"center",gap:1},children:[e.jsx(ot,{color:"primary"}),e.jsx(c,{variant:"h6",children:"Station Coverage Report Generator"})]})}),e.jsxs(Pe,{children:[e.jsx(nt,{activeStep:I,sx:{mb:4},children:u.map(i=>e.jsx(st,{children:e.jsx(it,{children:i})},i))}),H(I)]}),e.jsxs(Ae,{children:[e.jsx(V,{onClick:t,disabled:y,children:"Cancel"}),I>0&&I<3&&e.jsx(V,{onClick:ee,disabled:y,children:"Back"}),I<2&&e.jsx(V,{onClick:R,variant:"contained",disabled:!m||I===1&&!x.departmentName,children:"Next"}),I===2&&e.jsx(V,{onClick:()=>E(3),variant:"contained",disabled:!x.departmentName,children:"Continue to Generate"})]})]})},Vt=({mode:h="analysis"})=>{const[t,s]=l.useState(!0),[r,b]=l.useState("coverage"),[P,I]=l.useState(!1),[E,y]=l.useState(!1),[v,m]=l.useState([]),[Y,x]=l.useState(null),[A,u]=l.useState("nfpa1710"),[f,k]=l.useState(null),[R,ee]=l.useState(0),W=400,O=l.useCallback(C=>{console.log("üöí Importing station data:",C.length,"stations"),m(C),k(null)},[]),B=l.useCallback(C=>{console.log("‚ûï Adding new station:",C),m(ie=>[...ie,C])},[]),ae=l.useCallback(C=>{console.log("üéØ Station selected:",C.station_name)},[]),D=l.useCallback(C=>{console.log("üìä Analysis updated:",C),k(C)},[]),H=l.useCallback(C=>{console.log("‚úèÔ∏è Edit station:",C.station_id)},[]),i=l.useCallback(C=>{console.log("üóëÔ∏è Delete station:",C),m(ie=>ie.filter(re=>re.station_id!==C))},[]),S=l.useCallback(C=>{console.log("üìè Coverage standard changed to:",C),u(C),k(null)},[]),j=l.useCallback(C=>{console.log("üó∫Ô∏è Boundary data uploaded:",C),x(C)},[]),F=l.useCallback(()=>{if(console.log("üìä Running coverage analysis with NFPA standard:",A),v.length===0){console.warn("No stations available for analysis");return}k(null),ee(C=>C+1),console.log("‚úÖ Analysis triggered - results will be provided by map component")},[v,A]),z=l.useCallback(()=>{console.log("üìã Opening station coverage report generator"),I(!0)},[]),w=l.useCallback(()=>{s(C=>!C)},[]);return e.jsxs(g,{sx:{display:"flex",height:"100vh",overflow:"hidden"},children:[e.jsx(dt,{variant:"persistent",anchor:"left",open:t,sx:{width:t?W:0,flexShrink:0,"& .MuiDrawer-paper":{width:W,boxSizing:"border-box"}},children:e.jsx(xt,{stations:v,coverageStandard:A,jurisdictionBoundary:Y,onStationDataImport:O,onCoverageStandardChange:S,onStationAdd:B,onStationEdit:H,onStationDelete:i,onBoundaryUpload:j})}),e.jsxs(g,{component:"main",sx:{flexGrow:1,display:"flex",flexDirection:"column",overflow:"hidden",transition:"margin 0.3s ease-in-out",marginLeft:t?`${W}px`:"0px"},children:[e.jsx(de,{elevation:1,sx:{borderRadius:0,borderBottom:1,borderColor:"divider"},children:e.jsxs(Xe,{sx:{justifyContent:"space-between",px:3},children:[e.jsxs(g,{sx:{display:"flex",alignItems:"center",gap:2},children:[e.jsx(ge,{color:"primary",sx:{fontSize:28}}),e.jsxs(g,{children:[e.jsx(c,{variant:"h5",component:"h1",sx:{fontWeight:600,color:"primary.main"},children:"Station Coverage Optimizer"}),e.jsx(c,{variant:"body2",color:"text.secondary",children:"Enterprise coverage analysis with NFPA compliance assessment"})]}),A&&e.jsx(Q,{label:A.toUpperCase(),size:"small",color:"primary",variant:"outlined"})]}),e.jsxs(g,{sx:{display:"flex",gap:1},children:[e.jsx(J,{title:"Toggle Sidebar",children:e.jsx(K,{onClick:w,children:e.jsx(pt,{})})}),e.jsx(J,{title:"Run Coverage Analysis",children:e.jsx(V,{variant:"contained",color:"primary",startIcon:e.jsx(Fe,{}),onClick:F,disabled:v.length===0,children:"Analyze Coverage"})}),e.jsx(J,{title:"Generate Professional Report",children:e.jsx(K,{color:"primary",onClick:z,disabled:!f,sx:{bgcolor:"primary.main",color:"white","&:hover":{bgcolor:"primary.dark"},"&:disabled":{bgcolor:"grey.300",color:"grey.500"}},children:e.jsx(ut,{})})}),e.jsx(J,{title:"Settings",children:e.jsx(K,{onClick:()=>y(!0),children:e.jsx(ht,{})})}),e.jsx(J,{title:"About Station Coverage Optimizer",children:e.jsx(K,{children:e.jsx(mt,{})})})]})]})}),e.jsx(g,{sx:{flexGrow:1,display:"flex",overflow:"hidden"},children:e.jsx(g,{sx:{flexGrow:1,p:2,overflow:"auto"},children:v.length===0?e.jsxs(de,{sx:{p:4,textAlign:"center",mt:4},children:[e.jsx(fe,{sx:{fontSize:64,color:"text.secondary",mb:2}}),e.jsx(c,{variant:"h5",gutterBottom:!0,children:"Welcome to Station Coverage Optimizer"}),e.jsx(c,{variant:"body1",color:"text.secondary",paragraph:!0,children:"Upload station data to begin coverage analysis and optimization."}),e.jsxs(se,{severity:"info",sx:{mt:2,textAlign:"left"},children:[e.jsx(c,{variant:"subtitle2",gutterBottom:!0,children:"Getting Started:"}),e.jsxs(c,{variant:"body2",component:"div",children:["1. Use the sidebar to upload station data (CSV, Excel) or import from Data Formatter",e.jsx("br",{}),"2. Define your jurisdiction boundary (draw or upload)",e.jsx("br",{}),"3. Select NFPA standard (1710 for career, 1720 for volunteer departments)",e.jsx("br",{}),"4. Run coverage analysis to identify gaps and optimization opportunities"]})]})]}):e.jsxs(de,{sx:{height:"100%",display:"flex",flexDirection:"column"},children:[e.jsxs(g,{sx:{p:2,borderBottom:1,borderColor:"divider"},children:[e.jsx(c,{variant:"h6",gutterBottom:!0,children:"Interactive Coverage Map"}),e.jsxs(c,{variant:"body2",color:"text.secondary",gutterBottom:!0,children:[v.length," stations loaded ‚Ä¢ ",A.toUpperCase()," standards"]}),f&&e.jsxs(se,{severity:"success",sx:{mt:1},children:["Coverage analysis: ",f.coverageMetrics.nfpaCompliance.toFixed(1),"% NFPA compliance ‚Ä¢",f.identifiedGaps," gaps identified ‚Ä¢",f.recommendedStations," stations recommended"]})]}),e.jsx(g,{sx:{flexGrow:1,minHeight:0},children:e.jsx(ft,{stations:v,jurisdictionBoundary:Y,coverageStandard:A,onStationAdd:B,onStationSelect:ae,onAnalysisUpdate:D,analysisTriggered:R})})]})})})]}),e.jsxs(je,{open:E,onClose:()=>y(!1),maxWidth:"md",fullWidth:!0,children:[e.jsx(Te,{children:"Station Coverage Settings"}),e.jsx(Pe,{children:e.jsx(c,{variant:"body1",children:"Settings panel for NFPA standards, travel speeds, response time thresholds, etc."})}),e.jsx(Ae,{children:e.jsx(V,{onClick:()=>y(!1),children:"Close"})})]}),e.jsx(St,{open:P,onClose:()=>I(!1),stations:v,analysisResults:f,coverageStandard:A,jurisdictionBoundary:Y})]})};export{Vt as default};
