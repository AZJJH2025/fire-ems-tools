import{g as v,a as y}from"./index-DTG4ELQA.js";function b(r,f){for(var n=0;n<f.length;n++){const u=f[n];if(typeof u!="string"&&!Array.isArray(u)){for(const a in u)if(a!=="default"&&!(a in r)){const e=Object.getOwnPropertyDescriptor(u,a);e&&Object.defineProperty(r,a,e.get?e:{enumerable:!0,get:()=>u[a]})}}}return Object.freeze(Object.defineProperty(r,Symbol.toStringTag,{value:"Module"}))}var d={exports:{}};const _={},h=Object.freeze(Object.defineProperty({__proto__:null,default:_},Symbol.toStringTag,{value:"Module"})),j=v(h);function w(r){throw new Error('Could not dynamically require "'+r+'". Please configure the dynamicRequireTargets or/and ignoreDynamicRequires option of @rollup/plugin-commonjs appropriately for this require call to work.')}var c,p;function D(){if(p)return c;p=1;var r=null;function f(a){let e={normalizeWhitespace:!1,disableCombineTextItems:!1};return a.getTextContent(e).then(function(t){let o,s="";for(let i of t.items)o==i.transform[5]||!o?s+=i.str:s+=`
`+i.str,o=i.transform[5];return s})}const n={pagerender:f,max:0,version:"v1.10.100"};async function u(a,e){let t={numpages:0,numrender:0,info:null,metadata:null,text:"",version:null};typeof e>"u"&&(e=n),typeof e.pagerender!="function"&&(e.pagerender=n.pagerender),typeof e.max!="number"&&(e.max=n.max),typeof e.version!="string"&&(e.version=n.version),e.version=="default"&&(e.version=n.version),r=r||w(`./pdf.js/${e.version}/build/pdf.js`),t.version=r.version,r.disableWorker=!0;let o=await r.getDocument(a);t.numpages=o.numPages;let s=await o.getMetadata().catch(function(g){return null});t.info=s?s.info:null,t.metadata=s?s.metadata:null;let i=e.max<=0?o.numPages:e.max;i=i>o.numPages?o.numPages:i,t.text="";for(var l=1;l<=i;l++){let g=await o.getPage(l).then(m=>e.pagerender(m)).catch(m=>{debugger;return""});t.text=`${t.text}

${g}`}return t.numrender=i,o.destroy(),t}return c=u,c}var x;function $(){return x||(x=1,function(r){const f=j,n=D();if(r.exports=n,!r.parent){let a="./test/data/05-versions-space.pdf",e=f.readFileSync(a);n(e).then(function(t){f.writeFileSync(`${a}.txt`,t.text,{encoding:"utf8",flag:"w"});debugger}).catch(function(t){debugger})}}(d)),d.exports}var P=$();const q=y(P),O=b({__proto__:null,default:q},[P]);export{O as i};
